{"version":3,"sources":["webpack:///component---src-pages-map-js-d2a0db37fe01e694adfc.js","webpack:///./~/react-zoomable-image/build/index.js","webpack:///./src/pages/map.js"],"names":["webpackJsonp","796","module","exports","__webpack_require__","modules","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","e","this","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","length","queue","concat","queueIndex","drainQueue","timeout","len","run","Item","array","noop","process","nextTick","args","Array","arguments","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","makeEmptyFunction","arg","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","invariant","condition","format","a","b","f","validateFormat","error","undefined","argIndex","replace","framesToPop","NODE_ENV","ReactPropTypesSecret","warning","printWarning","_len","_key","message","console","x","indexOf","_len2","_key2","identity","value","func","thisArg","isFunction","isObject","tag","baseGetTag","funcTag","genTag","asyncTag","proxyTag","root","Symbol","freeGlobal","freeSelf","self","Function","type","arrayMap","iteratee","index","result","_interopRequireDefault","obj","default","_toConsumableArray","arr","isArray","arr2","from","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","constructor","writable","setPrototypeOf","__proto__","_extends","assign","target","source","key","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_propTypes","_propTypes2","_react","_react2","_zipWith","_zipWith2","_hammerjs","magPlus","magMinus","isEqual","arr1","styles","wrapper","position","zIndex","image","transitionProperty","width","height","zoomContainer","top","innerMap","left","pointerEvents","innerMapImage","innerMapHighlightBox","backgroundColor","zoomedImage","backgroundRepeat","isInBounds","coordinates","upperBounds","flag","forEach","nearestInBoundsPosition","loc","bounds","map","Math","min","ZoomableImage","_Component","_this","getPrototypeOf","startZoom","initialFocalPoint","isTouchDevice","setState","calcMovementFromDrag","state","viewWindowPosition","_this$props","baseImage","largeImage","largeWidth","largeHeight","largeImageSize","startingFocus","lastClickToZoomPosition","zoomed","zoomLevel","defaultZoomLevel","pageClickHandlersAreAdded","isStartingZoom","addBodyClickHandlers","transitionZoomBackground","zoomTransitionTime","endZoom","preventDefault","stopPropagation","removeBodyClickHandlers","isEndingZoom","onZoomWindowTouchStart","targetTouches","isDragging","previousDragPosition","clientX","clientY","checkForTap","onTouchEnd","listeningForSingleClick","document","querySelector","bodyElement","bodyClickHandlers","handler","_this$bodyElement","addEventListener","_this$bodyElement2","removeEventListener","calcBackgroundOffsetFromMouse","nativeEvent","_e$nativeEvent","offsetX","offsetY","window","requestAnimationFrame","calcBackgroundOffsetFromDrag","_this$state","currentDragPosition","dragScale","newFocus","pauseZoom","isCalculatingZoom","resumeZoom","handleZoom","deltaY","zoom","delta","round","dragFocalPoint","passiveSupported","options","err","passive","mc","Manager","add","Pinch","_this2","_props","thumbnailImage","displayMap","mapBorderColor","mapScaleFactor","_state","isTouch","baseToZoomRatio","referencePosition","viewWindowPercent","offset","createElement","data-name","style","cursor","onMouseDown","onTouchStart","_e$target$getBounding","getBoundingClientRect","y","changedTouches","src","alt","transitionDelay","ref","domNode","onMouseMove","onWheel","border","onClick","backgroundPosition","join","backgroundSize","backgroundImage","transition","Component","imageShape","string","isRequired","sizedImageShape","number","propTypes","shape","bool","defaultProps","REACT_ELEMENT_TYPE","for","isValidElement","$$typeof","throwOnDirectAccess","checkPropTypes","getIteratorFn","maybeIterable","iteratorFn","ITERATOR_SYMBOL","FAUX_ITERATOR_SYMBOL","is","PropTypeError","stack","createChainableTypeChecker","validate","checkType","propName","componentName","location","propFullName","secret","ANONYMOUS","cacheKey","manualPropTypeCallCache","manualPropTypeWarningCount","chainedCheckType","bind","createPrimitiveTypeChecker","expectedType","propValue","propType","getPropType","preciseType","getPreciseType","createAnyTypeChecker","createArrayOfTypeChecker","typeChecker","createElementTypeChecker","createInstanceTypeChecker","expectedClass","expectedClassName","actualClassName","getClassName","createEnumTypeChecker","expectedValues","valuesString","JSON","stringify","createObjectOfTypeChecker","createUnionTypeChecker","arrayOfTypeCheckers","checker","getPostfixForTypeWarning","createNodeChecker","isNode","createShapeTypeChecker","shapeTypes","createStrictShapeTypeChecker","allKeys","keys","every","step","iterator","entries","next","done","entry","isSymbol","RegExp","Date","ReactPropTypes","symbol","any","arrayOf","element","instanceOf","node","objectOf","oneOf","oneOfType","exact","PropTypes","toObject","val","shouldUseNative","test1","String","getOwnPropertyNames","test2","fromCharCode","order2","test3","split","letter","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","symbols","to","typeSpecs","values","getStack","typeSpecName","ex","loggedTypeFailures","shim","getShim","baseRest","unzipWith","zipWith","arrays","pop","start","setToString","overRest","transform","nativeMax","otherArgs","max","baseSetToString","shortOut","constant","getNative","getValue","baseIsNative","isMasked","pattern","reIsNative","reIsHostCtor","test","toSource","reRegExpChar","funcProto","objectProto","funcToString","toString","undefinedTag","nullTag","symToStringTag","getRawTag","objectToString","toStringTag","global","g","eval","isOwn","unmasked","nativeObjectToString","maskSrcKey","coreJsData","uid","exec","IE_PROTO","count","lastCalled","stamp","nativeNow","remaining","HOT_SPAN","HOT_COUNT","now","unzip","group","arrayFilter","isArrayLikeObject","baseTimes","baseProperty","predicate","resIndex","isObjectLike","isArrayLike","isLength","MAX_SAFE_INTEGER","__WEBPACK_AMD_DEFINE_RESULT__","exportName","setTimeoutContext","fn","context","bindFn","invokeArrayArg","each","deprecate","method","deprecationMessage","log","warn","inherit","child","base","properties","childP","baseP","_super","boolOrFn","TYPE_FUNCTION","ifUndefined","val1","val2","addEventListeners","types","splitStr","removeEventListeners","hasParent","parent","parentNode","inStr","str","find","trim","inArray","findByKey","toArray","slice","uniqueArray","sort","results","prefixed","prefix","prop","camelProp","toUpperCase","VENDOR_PREFIXES","uniqueId","_uniqueId","getWindowForElement","doc","ownerDocument","defaultView","parentWindow","Input","manager","callback","inputTarget","domHandler","ev","enable","init","createInputInstance","Type","inputClass","SUPPORT_POINTER_EVENTS","PointerEventInput","SUPPORT_ONLY_TOUCH","TouchInput","SUPPORT_TOUCH","TouchMouseInput","MouseInput","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","INPUT_START","isFinal","INPUT_END","INPUT_CANCEL","session","computeInputData","recognize","prevInput","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","deltaTime","angle","getAngle","distance","getDistance","computeDeltaXY","offsetDirection","getDirection","deltaX","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","abs","scale","getScale","rotation","getRotation","maxPointers","computeIntervalInputData","srcEvent","offsetDelta","prevDelta","velocity","velocityX","velocityY","direction","last","lastInterval","COMPUTE_INTERVAL","v","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","p1","p2","PROPS_XY","sqrt","atan2","PI","end","PROPS_CLIENT_XY","evEl","MOUSE_ELEMENT_EVENTS","evWin","MOUSE_WINDOW_EVENTS","pressed","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","store","SingleTouchInput","evTarget","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","started","normalizeSingleTouches","all","touches","changed","TOUCH_TARGET_EVENTS","targetIds","getTouches","allTouches","INPUT_MOVE","identifier","changedTargetTouches","filter","touch","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","removeLastTouch","splice","DEDUP_TIMEOUT","isSyntheticEvent","t","dx","dy","DEDUP_DISTANCE","TouchAction","set","cleanTouchActions","actions","TOUCH_ACTION_NONE","hasPanX","TOUCH_ACTION_PAN_X","hasPanY","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_AUTO","getTouchActionProps","NATIVE_TOUCH_ACTION","touchMap","cssSupports","CSS","supports","Recognizer","defaults","id","STATE_POSSIBLE","simultaneous","requireFail","stateStr","STATE_CANCELLED","STATE_ENDED","STATE_CHANGED","STATE_BEGAN","directionStr","getRecognizerByNameIfManager","otherRecognizer","recognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","Hammer","recognizers","preset","handlers","oldCssProps","touchAction","toggleCssProps","item","recognizeWith","requireFailure","cssProps","triggerDomEvent","event","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","TEST_ELEMENT","output","nextKey","extend","dest","merge","MOBILE_REGEX","navigator","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_PEN","INPUT_TYPE_MOUSE","INPUT_TYPE_KINECT","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","2","3","4","5","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","storeIndex","pointerId","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","TOUCH_INPUT_MAP","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_MAP","compute","update","getTouchAction","preventDefaults","prevented","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_RECOGNIZED","STATE_FAILED","dropRecognizeWith","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","reset","attrTest","optionPointers","isRecognized","isValid","threshold","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","STOP","FORCED_STOP","stop","force","stopped","curRecognizer","existing","remove","events","Tap","Pan","Swipe","Rotate","Press","480","MAP","display","justifyContent"],"mappings":"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","file":"component---src-pages-map-js-d2a0db37fe01e694adfc.js","sourcesContent":["webpackJsonp([251955352258861],{\n\n/***/ 796:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports =\n\t/******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId]) {\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/ \t\t}\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\ti: moduleId,\n\t/******/ \t\t\tl: false,\n\t/******/ \t\t\texports: {}\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.l = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// define getter function for harmony exports\n\t/******/ \t__webpack_require__.d = function(exports, name, getter) {\n\t/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n\t/******/ \t\t\tObject.defineProperty(exports, name, {\n\t/******/ \t\t\t\tconfigurable: false,\n\t/******/ \t\t\t\tenumerable: true,\n\t/******/ \t\t\t\tget: getter\n\t/******/ \t\t\t});\n\t/******/ \t\t}\n\t/******/ \t};\n\t/******/\n\t/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n\t/******/ \t__webpack_require__.n = function(module) {\n\t/******/ \t\tvar getter = module && module.__esModule ?\n\t/******/ \t\t\tfunction getDefault() { return module['default']; } :\n\t/******/ \t\t\tfunction getModuleExports() { return module; };\n\t/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n\t/******/ \t\treturn getter;\n\t/******/ \t};\n\t/******/\n\t/******/ \t// Object.prototype.hasOwnProperty.call\n\t/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(__webpack_require__.s = 12);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ (function(module, exports) {\n\t\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\tprocess.prependListener = noop;\n\tprocess.prependOnceListener = noop;\n\t\n\tprocess.listeners = function (name) { return [] }\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\t\n\t\n\t/***/ }),\n\t/* 1 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t * \n\t */\n\t\n\tfunction makeEmptyFunction(arg) {\n\t  return function () {\n\t    return arg;\n\t  };\n\t}\n\t\n\t/**\n\t * This function accepts and discards inputs; it has no side effects. This is\n\t * primarily useful idiomatically for overridable function endpoints which\n\t * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n\t */\n\tvar emptyFunction = function emptyFunction() {};\n\t\n\temptyFunction.thatReturns = makeEmptyFunction;\n\temptyFunction.thatReturnsFalse = makeEmptyFunction(false);\n\temptyFunction.thatReturnsTrue = makeEmptyFunction(true);\n\temptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\temptyFunction.thatReturnsThis = function () {\n\t  return this;\n\t};\n\temptyFunction.thatReturnsArgument = function (arg) {\n\t  return arg;\n\t};\n\t\n\tmodule.exports = emptyFunction;\n\t\n\t/***/ }),\n\t/* 2 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t */\n\t\n\t\n\t\n\t/**\n\t * Use invariant() to assert state which your program assumes to be true.\n\t *\n\t * Provide sprintf-style format (only %s is supported) and arguments\n\t * to provide information about what broke and what you were\n\t * expecting.\n\t *\n\t * The invariant message will be stripped in production, but the invariant\n\t * will remain to ensure logic does not differ in production.\n\t */\n\t\n\tvar validateFormat = function validateFormat(format) {};\n\t\n\tif (process.env.NODE_ENV !== 'production') {\n\t  validateFormat = function validateFormat(format) {\n\t    if (format === undefined) {\n\t      throw new Error('invariant requires an error message argument');\n\t    }\n\t  };\n\t}\n\t\n\tfunction invariant(condition, format, a, b, c, d, e, f) {\n\t  validateFormat(format);\n\t\n\t  if (!condition) {\n\t    var error;\n\t    if (format === undefined) {\n\t      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n\t    } else {\n\t      var args = [a, b, c, d, e, f];\n\t      var argIndex = 0;\n\t      error = new Error(format.replace(/%s/g, function () {\n\t        return args[argIndex++];\n\t      }));\n\t      error.name = 'Invariant Violation';\n\t    }\n\t\n\t    error.framesToPop = 1; // we don't care about invariant's own frame\n\t    throw error;\n\t  }\n\t}\n\t\n\tmodule.exports = invariant;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\t\n\t/***/ }),\n\t/* 3 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t\n\t\n\tvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\t\n\tmodule.exports = ReactPropTypesSecret;\n\t\n\t\n\t/***/ }),\n\t/* 4 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright (c) 2014-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t */\n\t\n\t\n\t\n\tvar emptyFunction = __webpack_require__(1);\n\t\n\t/**\n\t * Similar to invariant but only logs a warning if the condition is not met.\n\t * This can be used to log issues in development environments in critical\n\t * paths. Removing the logging code for production environments will keep the\n\t * same logic and follow the same code paths.\n\t */\n\t\n\tvar warning = emptyFunction;\n\t\n\tif (process.env.NODE_ENV !== 'production') {\n\t  var printWarning = function printWarning(format) {\n\t    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t      args[_key - 1] = arguments[_key];\n\t    }\n\t\n\t    var argIndex = 0;\n\t    var message = 'Warning: ' + format.replace(/%s/g, function () {\n\t      return args[argIndex++];\n\t    });\n\t    if (typeof console !== 'undefined') {\n\t      console.error(message);\n\t    }\n\t    try {\n\t      // --- Welcome to debugging React ---\n\t      // This error was thrown as a convenience so that you can use this stack\n\t      // to find the callsite that caused this warning to fire.\n\t      throw new Error(message);\n\t    } catch (x) {}\n\t  };\n\t\n\t  warning = function warning(condition, format) {\n\t    if (format === undefined) {\n\t      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n\t    }\n\t\n\t    if (format.indexOf('Failed Composite propType: ') === 0) {\n\t      return; // Ignore CompositeComponent proptype check.\n\t    }\n\t\n\t    if (!condition) {\n\t      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n\t        args[_key2 - 2] = arguments[_key2];\n\t      }\n\t\n\t      printWarning.apply(undefined, [format].concat(args));\n\t    }\n\t  };\n\t}\n\t\n\tmodule.exports = warning;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\t\n\t/***/ }),\n\t/* 5 */\n\t/***/ (function(module, exports) {\n\t\n\t/**\n\t * This method returns the first argument it receives.\n\t *\n\t * @static\n\t * @since 0.1.0\n\t * @memberOf _\n\t * @category Util\n\t * @param {*} value Any value.\n\t * @returns {*} Returns `value`.\n\t * @example\n\t *\n\t * var object = { 'a': 1 };\n\t *\n\t * console.log(_.identity(object) === object);\n\t * // => true\n\t */\n\tfunction identity(value) {\n\t  return value;\n\t}\n\t\n\tmodule.exports = identity;\n\t\n\t\n\t/***/ }),\n\t/* 6 */\n\t/***/ (function(module, exports) {\n\t\n\t/**\n\t * A faster alternative to `Function#apply`, this function invokes `func`\n\t * with the `this` binding of `thisArg` and the arguments of `args`.\n\t *\n\t * @private\n\t * @param {Function} func The function to invoke.\n\t * @param {*} thisArg The `this` binding of `func`.\n\t * @param {Array} args The arguments to invoke `func` with.\n\t * @returns {*} Returns the result of `func`.\n\t */\n\tfunction apply(func, thisArg, args) {\n\t  switch (args.length) {\n\t    case 0: return func.call(thisArg);\n\t    case 1: return func.call(thisArg, args[0]);\n\t    case 2: return func.call(thisArg, args[0], args[1]);\n\t    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n\t  }\n\t  return func.apply(thisArg, args);\n\t}\n\t\n\tmodule.exports = apply;\n\t\n\t\n\t/***/ }),\n\t/* 7 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar baseGetTag = __webpack_require__(28),\n\t    isObject = __webpack_require__(10);\n\t\n\t/** `Object#toString` result references. */\n\tvar asyncTag = '[object AsyncFunction]',\n\t    funcTag = '[object Function]',\n\t    genTag = '[object GeneratorFunction]',\n\t    proxyTag = '[object Proxy]';\n\t\n\t/**\n\t * Checks if `value` is classified as a `Function` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n\t * @example\n\t *\n\t * _.isFunction(_);\n\t * // => true\n\t *\n\t * _.isFunction(/abc/);\n\t * // => false\n\t */\n\tfunction isFunction(value) {\n\t  if (!isObject(value)) {\n\t    return false;\n\t  }\n\t  // The use of `Object#toString` avoids issues with the `typeof` operator\n\t  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\t  var tag = baseGetTag(value);\n\t  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n\t}\n\t\n\tmodule.exports = isFunction;\n\t\n\t\n\t/***/ }),\n\t/* 8 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar root = __webpack_require__(9);\n\t\n\t/** Built-in value references. */\n\tvar Symbol = root.Symbol;\n\t\n\tmodule.exports = Symbol;\n\t\n\t\n\t/***/ }),\n\t/* 9 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar freeGlobal = __webpack_require__(29);\n\t\n\t/** Detect free variable `self`. */\n\tvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\t\n\t/** Used as a reference to the global object. */\n\tvar root = freeGlobal || freeSelf || Function('return this')();\n\t\n\tmodule.exports = root;\n\t\n\t\n\t/***/ }),\n\t/* 10 */\n\t/***/ (function(module, exports) {\n\t\n\t/**\n\t * Checks if `value` is the\n\t * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n\t * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t * @example\n\t *\n\t * _.isObject({});\n\t * // => true\n\t *\n\t * _.isObject([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObject(_.noop);\n\t * // => true\n\t *\n\t * _.isObject(null);\n\t * // => false\n\t */\n\tfunction isObject(value) {\n\t  var type = typeof value;\n\t  return value != null && (type == 'object' || type == 'function');\n\t}\n\t\n\tmodule.exports = isObject;\n\t\n\t\n\t/***/ }),\n\t/* 11 */\n\t/***/ (function(module, exports) {\n\t\n\t/**\n\t * A specialized version of `_.map` for arrays without support for iteratee\n\t * shorthands.\n\t *\n\t * @private\n\t * @param {Array} [array] The array to iterate over.\n\t * @param {Function} iteratee The function invoked per iteration.\n\t * @returns {Array} Returns the new mapped array.\n\t */\n\tfunction arrayMap(array, iteratee) {\n\t  var index = -1,\n\t      length = array == null ? 0 : array.length,\n\t      result = Array(length);\n\t\n\t  while (++index < length) {\n\t    result[index] = iteratee(array[index], index, array);\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = arrayMap;\n\t\n\t\n\t/***/ }),\n\t/* 12 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _propTypes = __webpack_require__(13);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _react = __webpack_require__(18);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _zipWith = __webpack_require__(19);\n\t\n\tvar _zipWith2 = _interopRequireDefault(_zipWith);\n\t\n\tvar _hammerjs = __webpack_require__(47);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global document, window */\n\t\n\t\n\tvar magPlus = __webpack_require__(48);\n\tvar magMinus = __webpack_require__(49);\n\t\n\tvar isEqual = function isEqual(arr1, arr2) {\n\t  for (var i = 0; i < arr1.length; i++) {\n\t    if (arr1[i] !== arr2[i]) {\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t};\n\t\n\tvar styles = {\n\t  wrapper: {\n\t    position: 'relative',\n\t    zIndex: 1\n\t  },\n\t\n\t  image: {\n\t    position: 'relative',\n\t    transitionProperty: 'z-index',\n\t    width: '100%',\n\t    height: '100%'\n\t  },\n\t\n\t  zoomContainer: {\n\t    position: 'absolute',\n\t    top: 0\n\t  },\n\t\n\t  innerMap: {\n\t    position: 'absolute',\n\t    top: 10,\n\t    left: 10,\n\t    pointerEvents: 'none'\n\t  },\n\t\n\t  innerMapImage: {\n\t    width: '101%',\n\t    height: 'auto'\n\t  },\n\t\n\t  innerMapHighlightBox: {\n\t    position: 'absolute',\n\t    backgroundColor: 'rgba(140, 137, 131, 0.6)'\n\t  },\n\t\n\t  zoomedImage: {\n\t    position: 'absolute',\n\t    top: 0,\n\t    backgroundColor: 'transparent',\n\t    backgroundRepeat: 'no-repeat'\n\t  }\n\t};\n\t\n\tvar isInBounds = function isInBounds(coordinates, upperBounds) {\n\t  var flag = true;\n\t  coordinates.forEach(function (marker, i) {\n\t    if (marker <= 0 || marker >= upperBounds[i]) {\n\t      flag = false;\n\t    }\n\t  });\n\t  return flag;\n\t};\n\t\n\tvar nearestInBoundsPosition = function nearestInBoundsPosition(loc, bounds) {\n\t  return loc.map(function (p, i) {\n\t    return Math.min(p, bounds[i]);\n\t  });\n\t};\n\t\n\tvar ZoomableImage = function (_Component) {\n\t  _inherits(ZoomableImage, _Component);\n\t\n\t  /**\n\t   * Sets initial size of images, and zoom level into state\n\t   * @param {*} props\n\t   */\n\t  function ZoomableImage(props) {\n\t    _classCallCheck(this, ZoomableImage);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ZoomableImage.__proto__ || Object.getPrototypeOf(ZoomableImage)).call(this, props));\n\t\n\t    _this.startZoom = function (initialFocalPoint, isTouchDevice) {\n\t      if (isTouchDevice) _this.setState({ calcMovementFromDrag: true });\n\t      if (!isEqual(_this.state.viewWindowPosition, initialFocalPoint)) {\n\t        var _this$props = _this.props,\n\t            width = _this$props.baseImage.width,\n\t            largeImage = _this$props.largeImage;\n\t\n\t        var largeWidth = largeImage.width;\n\t        var largeHeight = largeImage.height;\n\t        var largeImageSize = [largeWidth, largeHeight];\n\t\n\t        var startingFocus = isTouchDevice ? initialFocalPoint.map(function (p) {\n\t          return p * (largeWidth / width);\n\t        }) : initialFocalPoint;\n\t\n\t        if (isTouchDevice && !isInBounds(startingFocus, largeImageSize)) {\n\t          startingFocus = nearestInBoundsPosition(startingFocus, largeImageSize);\n\t        }\n\t        _this.setState({\n\t          viewWindowPosition: startingFocus,\n\t          lastClickToZoomPosition: initialFocalPoint,\n\t          calcMovementFromDrag: isTouchDevice\n\t        });\n\t      }\n\t      _this.setState({\n\t        zoomed: 1,\n\t        zoomLevel: _this.state.defaultZoomLevel,\n\t        pageClickHandlersAreAdded: true,\n\t        isStartingZoom: true\n\t      });\n\t\n\t      // Turning off transitions so there is no delay between mousemove and the background\n\t      // image repositioning\n\t      setTimeout(function () {\n\t        _this.addBodyClickHandlers();\n\t        _this.setState({\n\t          transitionZoomBackground: false,\n\t          isStartingZoom: false\n\t        });\n\t      }, _this.props.zoomTransitionTime);\n\t    };\n\t\n\t    _this.endZoom = function (e) {\n\t      e.preventDefault();\n\t      e.stopPropagation();\n\t      var zoomLevel = _this.props.baseImage.width / _this.props.largeImage.width;\n\t      // Transitioning out of zoom view\n\t      _this.removeBodyClickHandlers();\n\t      _this.setState({\n\t        zoomed: 0,\n\t        zoomLevel: zoomLevel,\n\t        pageClickHandlersAreAdded: false,\n\t        transitionZoomBackground: true,\n\t        isEndingZoom: true\n\t      });\n\t      setTimeout(function () {\n\t        _this.setState({ isEndingZoom: false });\n\t      }, _this.props.zoomTransitionTime);\n\t    };\n\t\n\t    _this.onZoomWindowTouchStart = function (e) {\n\t      e.preventDefault();\n\t      e.stopPropagation();\n\t      if (e.targetTouches) {\n\t        _this.setState({\n\t          isDragging: true,\n\t          previousDragPosition: [e.targetTouches[0].clientX, e.targetTouches[0].clientY]\n\t        });\n\t      }\n\t      _this.checkForTap();\n\t    };\n\t\n\t    _this.onTouchEnd = function (e) {\n\t      // If this was a tap, not a drag, close the zoom view\n\t      if (_this.state.listeningForSingleClick) {\n\t        _this.endZoom(e);\n\t      } else {\n\t        e.stopPropagation();\n\t        e.preventDefault();\n\t      }\n\t      _this.setState({ isDragging: false });\n\t    };\n\t\n\t    _this.addBodyClickHandlers = function () {\n\t      if (document && document.querySelector) {\n\t        if (!_this.bodyElement) _this.bodyElement = document.querySelector('body');\n\t        _this.bodyClickHandlers.forEach(function (handler) {\n\t          var _this$bodyElement;\n\t\n\t          (_this$bodyElement = _this.bodyElement).addEventListener.apply(_this$bodyElement, _toConsumableArray(handler));\n\t        });\n\t      }\n\t    };\n\t\n\t    _this.removeBodyClickHandlers = function () {\n\t      if (document && document.querySelector) {\n\t        _this.bodyClickHandlers.forEach(function (handler) {\n\t          var _this$bodyElement2;\n\t\n\t          (_this$bodyElement2 = _this.bodyElement).removeEventListener.apply(_this$bodyElement2, _toConsumableArray(handler));\n\t        });\n\t      }\n\t    };\n\t\n\t    _this.calcBackgroundOffsetFromMouse = function (e) {\n\t      if (!_this.state.isDragging && e.nativeEvent) {\n\t        if (_this.state.calcMovementFromDrag) _this.setState({ calcMovementFromDrag: false });\n\t        var _e$nativeEvent = e.nativeEvent,\n\t            offsetX = _e$nativeEvent.offsetX,\n\t            offsetY = _e$nativeEvent.offsetY;\n\t\n\t        var viewWindowPosition = [offsetX, offsetY];\n\t        window.requestAnimationFrame(function () {\n\t          _this.setState({ viewWindowPosition: viewWindowPosition });\n\t        });\n\t      }\n\t    };\n\t\n\t    _this.calcBackgroundOffsetFromDrag = function (e) {\n\t      e.preventDefault();\n\t      e.stopPropagation();\n\t\n\t      if (!_this.state.calcMovementFromDrag) _this.setState({ calcMovementFromDrag: true });\n\t\n\t      var _this$state = _this.state,\n\t          zoomLevel = _this$state.zoomLevel,\n\t          previousDragPosition = _this$state.previousDragPosition,\n\t          viewWindowPosition = _this$state.viewWindowPosition;\n\t      var largeImage = _this.props.largeImage;\n\t\n\t      var largeImageSize = [largeImage.width, largeImage.height];\n\t\n\t      if (e.targetTouches) {\n\t        var currentDragPosition = [e.targetTouches[0].clientX, e.targetTouches[0].clientY];\n\t\n\t        // Translate the view window focal point by the drag distance\n\t        var dragScale = 3 / (zoomLevel * zoomLevel);\n\t        var newFocus = (0, _zipWith2.default)(viewWindowPosition, currentDragPosition, previousDragPosition, function (f, c, p) {\n\t          return f + (p - c) * dragScale;\n\t        });\n\t\n\t        if (isInBounds(newFocus, largeImageSize)) {\n\t          window.requestAnimationFrame(function () {\n\t            _this.setState({\n\t              viewWindowPosition: newFocus,\n\t              previousDragPosition: currentDragPosition\n\t            });\n\t          });\n\t        }\n\t      }\n\t    };\n\t\n\t    _this.checkForTap = function () {\n\t      _this.setState({ listeningForSingleClick: true });\n\t      setTimeout(function () {\n\t        return _this.setState({ listeningForSingleClick: false });\n\t      }, 200);\n\t    };\n\t\n\t    _this.pauseZoom = function () {\n\t      return _this.setState({ isCalculatingZoom: true });\n\t    };\n\t\n\t    _this.resumeZoom = function () {\n\t      return _this.setState({ isCalculatingZoom: false });\n\t    };\n\t\n\t    _this.handleZoom = function (e) {\n\t      e.preventDefault();\n\t      var zoomLevel = _this.state.zoomLevel;\n\t\n\t      if (!_this.state.isCalculatingZoom && zoomLevel <= 2 && zoomLevel >= 0) {\n\t        if ((e.type === 'pinchout' || e.deltaY < 0) && zoomLevel < 2) {\n\t          _this.zoom(0.05);\n\t        } else if ((e.type === 'pinchin' || e.deltaY > 0) && zoomLevel > 1) {\n\t          _this.zoom(-0.05);\n\t        }\n\t      }\n\t    };\n\t\n\t    _this.zoom = function (delta) {\n\t      _this.pauseZoom();\n\t      var zoomLevel = Math.round((_this.state.zoomLevel + delta) * 100) / 100;\n\t      _this.setState({ zoomLevel: zoomLevel }, _this.resumeZoom);\n\t    };\n\t\n\t    _this.state = {\n\t      zoomed: 0,\n\t      zoomLevel: props.baseImage.width / props.largeImage.width,\n\t      defaultZoomLevel: 1.2,\n\t      viewWindowPosition: [0, 0],\n\t      dragFocalPoint: [0, 0],\n\t      lastClickToZoomPosition: [-1, -1],\n\t      isCalculatingZoom: false,\n\t      isDragging: false,\n\t      calcMovementFromDrag: false,\n\t      pageClickHandlersAreAdded: false,\n\t      transitionZoomBackground: true,\n\t      isStartingZoom: false,\n\t      isEndingZoom: false\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * This is all a workaround to handle chrome disabling e.preventDefault()\n\t   * unless you specify to enable it. Unfortunately this cannot be done through\n\t   * React synthetic events\n\t   */\n\t\n\t\n\t  _createClass(ZoomableImage, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.bodyClickHandlers = [['click', this.endZoom], ['touchstart', this.checkForTap], ['touchend', this.onTouchEnd]];\n\t      var passiveSupported = false;\n\t      try {\n\t        var options = Object.defineProperty({}, 'passive', {\n\t          get: function get() {\n\t            passiveSupported = true;\n\t          }\n\t        });\n\t        document.querySelector('body').addEventListener('test', null, options);\n\t      } catch (err) {\n\t        passiveSupported = false;\n\t      }\n\t      var passive = passiveSupported ? { passive: false } : false;\n\t      if (this.zoomContainer) {\n\t        this.zoomContainer.addEventListener('touchmove', this.calcBackgroundOffsetFromDrag, passive);\n\t        this.zoomContainer.addEventListener('touchstart', this.onZoomWindowTouchStart, passive);\n\t        this.zoomContainer.addEventListener('touchend', this.onTouchEnd, passive);\n\t        // Initialize Hammer\n\t        this.mc = new _hammerjs.Manager(this.zoomContainer);\n\t        this.mc.add(new _hammerjs.Pinch());\n\t        this.mc.on('pinchin', this.handleZoom);\n\t        this.mc.on('pinchout', this.handleZoom);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Make sure we don't leave any garbage behind\n\t     */\n\t\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      this.removeBodyClickHandlers();\n\t    }\n\t\n\t    /**\n\t     * Close zoom view following a click or tap anywhere on the page\n\t     */\n\t\n\t  }, {\n\t    key: 'render',\n\t\n\t\n\t    /**\n\t     * Renders.\n\t     * @returns {*}\n\t     */\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var _props = this.props,\n\t          baseImage = _props.baseImage,\n\t          largeImage = _props.largeImage,\n\t          thumbnailImage = _props.thumbnailImage,\n\t          displayMap = _props.displayMap,\n\t          zoomTransitionTime = _props.zoomTransitionTime,\n\t          mapBorderColor = _props.mapBorderColor,\n\t          mapScaleFactor = _props.mapScaleFactor;\n\t      var _state = this.state,\n\t          zoomed = _state.zoomed,\n\t          viewWindowPosition = _state.viewWindowPosition,\n\t          zoomLevel = _state.zoomLevel,\n\t          calcMovementFromDrag = _state.calcMovementFromDrag,\n\t          transitionZoomBackground = _state.transitionZoomBackground,\n\t          isStartingZoom = _state.isStartingZoom,\n\t          listeningForSingleClick = _state.listeningForSingleClick,\n\t          isEndingZoom = _state.isEndingZoom,\n\t          isTouch = _state.isTouch;\n\t      var width = baseImage.width,\n\t          height = baseImage.height;\n\t\n\t      var largeWidth = largeImage.width;\n\t      var largeHeight = largeImage.height;\n\t      var baseToZoomRatio = width / (largeWidth * zoomLevel);\n\t      var referencePosition = calcMovementFromDrag ? [largeWidth, largeHeight] : [width, height];\n\t      var viewWindowPercent = viewWindowPosition.map(function (offset, i) {\n\t        return Math.round(offset / referencePosition[i] * 1000) / 10;\n\t      });\n\t\n\t      return _react2.default.createElement(\n\t        'div',\n\t        {\n\t          'data-name': 'wrapper',\n\t          style: _extends({}, styles.wrapper, { width: width, height: height, cursor: 'url(' + (zoomed ? magMinus : magPlus) + '), pointer' }),\n\t          onMouseDown: function onMouseDown(e) {\n\t            if (!zoomed && !isTouch) {\n\t              _this2.startZoom([e.nativeEvent.offsetX, e.nativeEvent.offsetY], false);\n\t            }\n\t          },\n\t          onTouchStart: function onTouchStart(e) {\n\t            if (!zoomed) {\n\t              e.preventDefault();\n\t              e.stopPropagation();\n\t              _this2.setState({ listeningForSingleClick: true, isTouch: true });\n\t              setTimeout(function () {\n\t                _this2.setState({ listeningForSingleClick: false });\n\t              }, 200);\n\t              setTimeout(function () {\n\t                _this2.setState({ isTouch: false });\n\t              }, 2000);\n\t            }\n\t          },\n\t          onTouchEnd: function onTouchEnd(e) {\n\t            e.preventDefault();\n\t            e.stopPropagation();\n\t            if (!zoomed && listeningForSingleClick && !isEndingZoom) {\n\t              var _e$target$getBounding = e.target.getBoundingClientRect(),\n\t                  x = _e$target$getBounding.x,\n\t                  y = _e$target$getBounding.y;\n\t\n\t              _this2.startZoom([e.changedTouches[0].clientX - (x || 0), e.changedTouches[0].clientY - (y || 0)], true);\n\t            }\n\t          }\n\t        },\n\t        _react2.default.createElement('img', {\n\t          src: baseImage.src,\n\t          alt: baseImage.alt,\n\t          style: _extends({}, styles.image, {\n\t            zIndex: zoomed ? -1 : 1,\n\t            transitionDelay: zoomTransitionTime + 'ms'\n\t          })\n\t        }),\n\t        _react2.default.createElement(\n\t          'div',\n\t          {\n\t            'data-name': 'zoom-wrapper',\n\t            ref: function ref(domNode) {\n\t              _this2.zoomContainer = domNode;\n\t            },\n\t            onMouseMove: this.calcBackgroundOffsetFromMouse,\n\t            onWheel: this.handleZoom,\n\t            style: _extends({}, styles.zoomContainer, { width: width, height: height, zIndex: zoomed * 100 })\n\t          },\n\t          displayMap && _react2.default.createElement(\n\t            'div',\n\t            {\n\t              style: _extends({}, styles.innerMap, {\n\t                width: width * mapScaleFactor,\n\t                height: height * mapScaleFactor,\n\t                zIndex: zoomed * 200,\n\t                border: '2px solid ' + mapBorderColor\n\t\n\t              })\n\t            },\n\t            _react2.default.createElement('img', { style: styles.innerMapImage, src: thumbnailImage.src, alt: thumbnailImage.alt || 'thumbnail' }),\n\t            _react2.default.createElement('div', {\n\t              'data-name': 'map-highlight',\n\t              style: _extends({}, styles.innerMapHighlightBox, {\n\t                width: baseToZoomRatio * 100 + '%',\n\t                height: baseToZoomRatio * 100 + '%',\n\t                left: viewWindowPercent[0] * (1 - baseToZoomRatio) + '%',\n\t                top: viewWindowPercent[1] * (1 - baseToZoomRatio) + '%'\n\t              })\n\t            })\n\t          ),\n\t          _react2.default.createElement('div', {\n\t            'data-name': 'zoom-image',\n\t            onClick: function onClick(e) {\n\t              if (zoomed && !isStartingZoom) _this2.endZoom(e);\n\t            },\n\t            style: _extends({}, styles.zoomedImage, {\n\t              width: width,\n\t              height: height,\n\t              zIndex: zoomed * 110,\n\t              backgroundPosition: viewWindowPercent.map(function (p) {\n\t                return p + '%';\n\t              }).join(' '),\n\t              backgroundSize: Math.round(largeWidth * zoomLevel) + 'px ' + Math.round(largeHeight * zoomLevel) + 'px',\n\t              backgroundImage: 'url(' + largeImage.src + ')',\n\t              transition: transitionZoomBackground ? 'background-size ' + zoomTransitionTime + 'ms ease-in-out' : 'none'\n\t            })\n\t          })\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ZoomableImage;\n\t}(_react.Component);\n\t\n\tvar imageShape = {\n\t  alt: _propTypes2.default.string.isRequired,\n\t  src: _propTypes2.default.string.isRequired\n\t};\n\tvar sizedImageShape = _extends({}, imageShape, {\n\t  width: _propTypes2.default.number.isRequired,\n\t  height: _propTypes2.default.number.isRequired\n\t});\n\t\n\tZoomableImage.propTypes = {\n\t  baseImage: _propTypes2.default.shape(sizedImageShape).isRequired,\n\t  displayMap: _propTypes2.default.bool,\n\t  largeImage: _propTypes2.default.shape(sizedImageShape).isRequired,\n\t  mapBorderColor: _propTypes2.default.string,\n\t  mapScaleFactor: _propTypes2.default.number,\n\t  thumbnailImage: _propTypes2.default.shape(imageShape),\n\t  zoomTransitionTime: _propTypes2.default.number\n\t};\n\t\n\tZoomableImage.defaultProps = {\n\t  zoomTransitionTime: 300,\n\t  displayMap: true,\n\t  mapBorderColor: 'grey',\n\t  mapScaleFactor: 0.2,\n\t  thumbnailImage: { alt: '', src: '' }\n\t};\n\t\n\texports.default = ZoomableImage;\n\t\n\t/***/ }),\n\t/* 13 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\tif (process.env.NODE_ENV !== 'production') {\n\t  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n\t    Symbol.for &&\n\t    Symbol.for('react.element')) ||\n\t    0xeac7;\n\t\n\t  var isValidElement = function(object) {\n\t    return typeof object === 'object' &&\n\t      object !== null &&\n\t      object.$$typeof === REACT_ELEMENT_TYPE;\n\t  };\n\t\n\t  // By explicitly using `prop-types` you are opting into new development behavior.\n\t  // http://fb.me/prop-types-in-prod\n\t  var throwOnDirectAccess = true;\n\t  module.exports = __webpack_require__(14)(isValidElement, throwOnDirectAccess);\n\t} else {\n\t  // By explicitly using `prop-types` you are opting into new production behavior.\n\t  // http://fb.me/prop-types-in-prod\n\t  module.exports = __webpack_require__(17)();\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\t\n\t/***/ }),\n\t/* 14 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t\n\t\n\tvar emptyFunction = __webpack_require__(1);\n\tvar invariant = __webpack_require__(2);\n\tvar warning = __webpack_require__(4);\n\tvar assign = __webpack_require__(15);\n\t\n\tvar ReactPropTypesSecret = __webpack_require__(3);\n\tvar checkPropTypes = __webpack_require__(16);\n\t\n\tmodule.exports = function(isValidElement, throwOnDirectAccess) {\n\t  /* global Symbol */\n\t  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n\t  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\t\n\t  /**\n\t   * Returns the iterator method function contained on the iterable object.\n\t   *\n\t   * Be sure to invoke the function with the iterable as context:\n\t   *\n\t   *     var iteratorFn = getIteratorFn(myIterable);\n\t   *     if (iteratorFn) {\n\t   *       var iterator = iteratorFn.call(myIterable);\n\t   *       ...\n\t   *     }\n\t   *\n\t   * @param {?object} maybeIterable\n\t   * @return {?function}\n\t   */\n\t  function getIteratorFn(maybeIterable) {\n\t    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n\t    if (typeof iteratorFn === 'function') {\n\t      return iteratorFn;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Collection of methods that allow declaration and validation of props that are\n\t   * supplied to React components. Example usage:\n\t   *\n\t   *   var Props = require('ReactPropTypes');\n\t   *   var MyArticle = React.createClass({\n\t   *     propTypes: {\n\t   *       // An optional string prop named \"description\".\n\t   *       description: Props.string,\n\t   *\n\t   *       // A required enum prop named \"category\".\n\t   *       category: Props.oneOf(['News','Photos']).isRequired,\n\t   *\n\t   *       // A prop named \"dialog\" that requires an instance of Dialog.\n\t   *       dialog: Props.instanceOf(Dialog).isRequired\n\t   *     },\n\t   *     render: function() { ... }\n\t   *   });\n\t   *\n\t   * A more formal specification of how these methods are used:\n\t   *\n\t   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n\t   *   decl := ReactPropTypes.{type}(.isRequired)?\n\t   *\n\t   * Each and every declaration produces a function with the same signature. This\n\t   * allows the creation of custom validation functions. For example:\n\t   *\n\t   *  var MyLink = React.createClass({\n\t   *    propTypes: {\n\t   *      // An optional string or URI prop named \"href\".\n\t   *      href: function(props, propName, componentName) {\n\t   *        var propValue = props[propName];\n\t   *        if (propValue != null && typeof propValue !== 'string' &&\n\t   *            !(propValue instanceof URI)) {\n\t   *          return new Error(\n\t   *            'Expected a string or an URI for ' + propName + ' in ' +\n\t   *            componentName\n\t   *          );\n\t   *        }\n\t   *      }\n\t   *    },\n\t   *    render: function() {...}\n\t   *  });\n\t   *\n\t   * @internal\n\t   */\n\t\n\t  var ANONYMOUS = '<<anonymous>>';\n\t\n\t  // Important!\n\t  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n\t  var ReactPropTypes = {\n\t    array: createPrimitiveTypeChecker('array'),\n\t    bool: createPrimitiveTypeChecker('boolean'),\n\t    func: createPrimitiveTypeChecker('function'),\n\t    number: createPrimitiveTypeChecker('number'),\n\t    object: createPrimitiveTypeChecker('object'),\n\t    string: createPrimitiveTypeChecker('string'),\n\t    symbol: createPrimitiveTypeChecker('symbol'),\n\t\n\t    any: createAnyTypeChecker(),\n\t    arrayOf: createArrayOfTypeChecker,\n\t    element: createElementTypeChecker(),\n\t    instanceOf: createInstanceTypeChecker,\n\t    node: createNodeChecker(),\n\t    objectOf: createObjectOfTypeChecker,\n\t    oneOf: createEnumTypeChecker,\n\t    oneOfType: createUnionTypeChecker,\n\t    shape: createShapeTypeChecker,\n\t    exact: createStrictShapeTypeChecker,\n\t  };\n\t\n\t  /**\n\t   * inlined Object.is polyfill to avoid requiring consumers ship their own\n\t   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n\t   */\n\t  /*eslint-disable no-self-compare*/\n\t  function is(x, y) {\n\t    // SameValue algorithm\n\t    if (x === y) {\n\t      // Steps 1-5, 7-10\n\t      // Steps 6.b-6.e: +0 != -0\n\t      return x !== 0 || 1 / x === 1 / y;\n\t    } else {\n\t      // Step 6.a: NaN == NaN\n\t      return x !== x && y !== y;\n\t    }\n\t  }\n\t  /*eslint-enable no-self-compare*/\n\t\n\t  /**\n\t   * We use an Error-like object for backward compatibility as people may call\n\t   * PropTypes directly and inspect their output. However, we don't use real\n\t   * Errors anymore. We don't inspect their stack anyway, and creating them\n\t   * is prohibitively expensive if they are created too often, such as what\n\t   * happens in oneOfType() for any type before the one that matched.\n\t   */\n\t  function PropTypeError(message) {\n\t    this.message = message;\n\t    this.stack = '';\n\t  }\n\t  // Make `instanceof Error` still work for returned errors.\n\t  PropTypeError.prototype = Error.prototype;\n\t\n\t  function createChainableTypeChecker(validate) {\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      var manualPropTypeCallCache = {};\n\t      var manualPropTypeWarningCount = 0;\n\t    }\n\t    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n\t      componentName = componentName || ANONYMOUS;\n\t      propFullName = propFullName || propName;\n\t\n\t      if (secret !== ReactPropTypesSecret) {\n\t        if (throwOnDirectAccess) {\n\t          // New behavior only for users of `prop-types` package\n\t          invariant(\n\t            false,\n\t            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n\t            'Use `PropTypes.checkPropTypes()` to call them. ' +\n\t            'Read more at http://fb.me/use-check-prop-types'\n\t          );\n\t        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n\t          // Old behavior for people using React.PropTypes\n\t          var cacheKey = componentName + ':' + propName;\n\t          if (\n\t            !manualPropTypeCallCache[cacheKey] &&\n\t            // Avoid spamming the console because they are often not actionable except for lib authors\n\t            manualPropTypeWarningCount < 3\n\t          ) {\n\t            warning(\n\t              false,\n\t              'You are manually calling a React.PropTypes validation ' +\n\t              'function for the `%s` prop on `%s`. This is deprecated ' +\n\t              'and will throw in the standalone `prop-types` package. ' +\n\t              'You may be seeing this warning due to a third-party PropTypes ' +\n\t              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',\n\t              propFullName,\n\t              componentName\n\t            );\n\t            manualPropTypeCallCache[cacheKey] = true;\n\t            manualPropTypeWarningCount++;\n\t          }\n\t        }\n\t      }\n\t      if (props[propName] == null) {\n\t        if (isRequired) {\n\t          if (props[propName] === null) {\n\t            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n\t          }\n\t          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n\t        }\n\t        return null;\n\t      } else {\n\t        return validate(props, propName, componentName, location, propFullName);\n\t      }\n\t    }\n\t\n\t    var chainedCheckType = checkType.bind(null, false);\n\t    chainedCheckType.isRequired = checkType.bind(null, true);\n\t\n\t    return chainedCheckType;\n\t  }\n\t\n\t  function createPrimitiveTypeChecker(expectedType) {\n\t    function validate(props, propName, componentName, location, propFullName, secret) {\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== expectedType) {\n\t        // `propValue` being instance of, say, date/regexp, pass the 'object'\n\t        // check, but we can offer a more precise error message here rather than\n\t        // 'of type `object`'.\n\t        var preciseType = getPreciseType(propValue);\n\t\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createAnyTypeChecker() {\n\t    return createChainableTypeChecker(emptyFunction.thatReturnsNull);\n\t  }\n\t\n\t  function createArrayOfTypeChecker(typeChecker) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (typeof typeChecker !== 'function') {\n\t        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n\t      }\n\t      var propValue = props[propName];\n\t      if (!Array.isArray(propValue)) {\n\t        var propType = getPropType(propValue);\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n\t      }\n\t      for (var i = 0; i < propValue.length; i++) {\n\t        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n\t        if (error instanceof Error) {\n\t          return error;\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createElementTypeChecker() {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      if (!isValidElement(propValue)) {\n\t        var propType = getPropType(propValue);\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createInstanceTypeChecker(expectedClass) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (!(props[propName] instanceof expectedClass)) {\n\t        var expectedClassName = expectedClass.name || ANONYMOUS;\n\t        var actualClassName = getClassName(props[propName]);\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createEnumTypeChecker(expectedValues) {\n\t    if (!Array.isArray(expectedValues)) {\n\t      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;\n\t      return emptyFunction.thatReturnsNull;\n\t    }\n\t\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      for (var i = 0; i < expectedValues.length; i++) {\n\t        if (is(propValue, expectedValues[i])) {\n\t          return null;\n\t        }\n\t      }\n\t\n\t      var valuesString = JSON.stringify(expectedValues);\n\t      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createObjectOfTypeChecker(typeChecker) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (typeof typeChecker !== 'function') {\n\t        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n\t      }\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== 'object') {\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n\t      }\n\t      for (var key in propValue) {\n\t        if (propValue.hasOwnProperty(key)) {\n\t          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\t          if (error instanceof Error) {\n\t            return error;\n\t          }\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createUnionTypeChecker(arrayOfTypeCheckers) {\n\t    if (!Array.isArray(arrayOfTypeCheckers)) {\n\t      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n\t      return emptyFunction.thatReturnsNull;\n\t    }\n\t\n\t    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n\t      var checker = arrayOfTypeCheckers[i];\n\t      if (typeof checker !== 'function') {\n\t        warning(\n\t          false,\n\t          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n\t          'received %s at index %s.',\n\t          getPostfixForTypeWarning(checker),\n\t          i\n\t        );\n\t        return emptyFunction.thatReturnsNull;\n\t      }\n\t    }\n\t\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n\t        var checker = arrayOfTypeCheckers[i];\n\t        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n\t          return null;\n\t        }\n\t      }\n\t\n\t      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createNodeChecker() {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (!isNode(props[propName])) {\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createShapeTypeChecker(shapeTypes) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== 'object') {\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n\t      }\n\t      for (var key in shapeTypes) {\n\t        var checker = shapeTypes[key];\n\t        if (!checker) {\n\t          continue;\n\t        }\n\t        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\t        if (error) {\n\t          return error;\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createStrictShapeTypeChecker(shapeTypes) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== 'object') {\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n\t      }\n\t      // We need to check all keys in case some are required but missing from\n\t      // props.\n\t      var allKeys = assign({}, props[propName], shapeTypes);\n\t      for (var key in allKeys) {\n\t        var checker = shapeTypes[key];\n\t        if (!checker) {\n\t          return new PropTypeError(\n\t            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n\t            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n\t            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n\t          );\n\t        }\n\t        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\t        if (error) {\n\t          return error;\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function isNode(propValue) {\n\t    switch (typeof propValue) {\n\t      case 'number':\n\t      case 'string':\n\t      case 'undefined':\n\t        return true;\n\t      case 'boolean':\n\t        return !propValue;\n\t      case 'object':\n\t        if (Array.isArray(propValue)) {\n\t          return propValue.every(isNode);\n\t        }\n\t        if (propValue === null || isValidElement(propValue)) {\n\t          return true;\n\t        }\n\t\n\t        var iteratorFn = getIteratorFn(propValue);\n\t        if (iteratorFn) {\n\t          var iterator = iteratorFn.call(propValue);\n\t          var step;\n\t          if (iteratorFn !== propValue.entries) {\n\t            while (!(step = iterator.next()).done) {\n\t              if (!isNode(step.value)) {\n\t                return false;\n\t              }\n\t            }\n\t          } else {\n\t            // Iterator will provide entry [k,v] tuples rather than values.\n\t            while (!(step = iterator.next()).done) {\n\t              var entry = step.value;\n\t              if (entry) {\n\t                if (!isNode(entry[1])) {\n\t                  return false;\n\t                }\n\t              }\n\t            }\n\t          }\n\t        } else {\n\t          return false;\n\t        }\n\t\n\t        return true;\n\t      default:\n\t        return false;\n\t    }\n\t  }\n\t\n\t  function isSymbol(propType, propValue) {\n\t    // Native Symbol.\n\t    if (propType === 'symbol') {\n\t      return true;\n\t    }\n\t\n\t    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n\t    if (propValue['@@toStringTag'] === 'Symbol') {\n\t      return true;\n\t    }\n\t\n\t    // Fallback for non-spec compliant Symbols which are polyfilled.\n\t    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n\t      return true;\n\t    }\n\t\n\t    return false;\n\t  }\n\t\n\t  // Equivalent of `typeof` but with special handling for array and regexp.\n\t  function getPropType(propValue) {\n\t    var propType = typeof propValue;\n\t    if (Array.isArray(propValue)) {\n\t      return 'array';\n\t    }\n\t    if (propValue instanceof RegExp) {\n\t      // Old webkits (at least until Android 4.0) return 'function' rather than\n\t      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n\t      // passes PropTypes.object.\n\t      return 'object';\n\t    }\n\t    if (isSymbol(propType, propValue)) {\n\t      return 'symbol';\n\t    }\n\t    return propType;\n\t  }\n\t\n\t  // This handles more types than `getPropType`. Only used for error messages.\n\t  // See `createPrimitiveTypeChecker`.\n\t  function getPreciseType(propValue) {\n\t    if (typeof propValue === 'undefined' || propValue === null) {\n\t      return '' + propValue;\n\t    }\n\t    var propType = getPropType(propValue);\n\t    if (propType === 'object') {\n\t      if (propValue instanceof Date) {\n\t        return 'date';\n\t      } else if (propValue instanceof RegExp) {\n\t        return 'regexp';\n\t      }\n\t    }\n\t    return propType;\n\t  }\n\t\n\t  // Returns a string that is postfixed to a warning about an invalid type.\n\t  // For example, \"undefined\" or \"of type array\"\n\t  function getPostfixForTypeWarning(value) {\n\t    var type = getPreciseType(value);\n\t    switch (type) {\n\t      case 'array':\n\t      case 'object':\n\t        return 'an ' + type;\n\t      case 'boolean':\n\t      case 'date':\n\t      case 'regexp':\n\t        return 'a ' + type;\n\t      default:\n\t        return type;\n\t    }\n\t  }\n\t\n\t  // Returns class name of the object, if any.\n\t  function getClassName(propValue) {\n\t    if (!propValue.constructor || !propValue.constructor.name) {\n\t      return ANONYMOUS;\n\t    }\n\t    return propValue.constructor.name;\n\t  }\n\t\n\t  ReactPropTypes.checkPropTypes = checkPropTypes;\n\t  ReactPropTypes.PropTypes = ReactPropTypes;\n\t\n\t  return ReactPropTypes;\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\t\n\t/***/ }),\n\t/* 15 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t/*\n\tobject-assign\n\t(c) Sindre Sorhus\n\t@license MIT\n\t*/\n\t\n\t\n\t/* eslint-disable no-unused-vars */\n\tvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\t\n\tfunction toObject(val) {\n\t\tif (val === null || val === undefined) {\n\t\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t\t}\n\t\n\t\treturn Object(val);\n\t}\n\t\n\tfunction shouldUseNative() {\n\t\ttry {\n\t\t\tif (!Object.assign) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Detect buggy property enumeration order in older V8 versions.\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\t\ttest1[5] = 'de';\n\t\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test2 = {};\n\t\t\tfor (var i = 0; i < 10; i++) {\n\t\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t\t}\n\t\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\t\treturn test2[n];\n\t\t\t});\n\t\t\tif (order2.join('') !== '0123456789') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test3 = {};\n\t\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\t\ttest3[letter] = letter;\n\t\t\t});\n\t\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\t\tvar from;\n\t\tvar to = toObject(target);\n\t\tvar symbols;\n\t\n\t\tfor (var s = 1; s < arguments.length; s++) {\n\t\t\tfrom = Object(arguments[s]);\n\t\n\t\t\tfor (var key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tto[key] = from[key];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (getOwnPropertySymbols) {\n\t\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn to;\n\t};\n\t\n\t\n\t/***/ }),\n\t/* 16 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t\n\t\n\tif (process.env.NODE_ENV !== 'production') {\n\t  var invariant = __webpack_require__(2);\n\t  var warning = __webpack_require__(4);\n\t  var ReactPropTypesSecret = __webpack_require__(3);\n\t  var loggedTypeFailures = {};\n\t}\n\t\n\t/**\n\t * Assert that the values match with the type specs.\n\t * Error messages are memorized and will only be shown once.\n\t *\n\t * @param {object} typeSpecs Map of name to a ReactPropType\n\t * @param {object} values Runtime values that need to be type-checked\n\t * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n\t * @param {string} componentName Name of the component for error messages.\n\t * @param {?Function} getStack Returns the component stack.\n\t * @private\n\t */\n\tfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n\t  if (process.env.NODE_ENV !== 'production') {\n\t    for (var typeSpecName in typeSpecs) {\n\t      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n\t        var error;\n\t        // Prop type validation may throw. In case they do, we don't want to\n\t        // fail the render phase where it didn't fail before. So we log it.\n\t        // After these have been cleaned up, we'll let them throw.\n\t        try {\n\t          // This is intentionally an invariant that gets caught. It's the same\n\t          // behavior as without this statement except with a better message.\n\t          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);\n\t          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n\t        } catch (ex) {\n\t          error = ex;\n\t        }\n\t        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);\n\t        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n\t          // Only monitor this failure once because there tends to be a lot of the\n\t          // same error.\n\t          loggedTypeFailures[error.message] = true;\n\t\n\t          var stack = getStack ? getStack() : '';\n\t\n\t          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tmodule.exports = checkPropTypes;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\t\n\t/***/ }),\n\t/* 17 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t\n\t\n\tvar emptyFunction = __webpack_require__(1);\n\tvar invariant = __webpack_require__(2);\n\tvar ReactPropTypesSecret = __webpack_require__(3);\n\t\n\tmodule.exports = function() {\n\t  function shim(props, propName, componentName, location, propFullName, secret) {\n\t    if (secret === ReactPropTypesSecret) {\n\t      // It is still safe when called from React.\n\t      return;\n\t    }\n\t    invariant(\n\t      false,\n\t      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n\t      'Use PropTypes.checkPropTypes() to call them. ' +\n\t      'Read more at http://fb.me/use-check-prop-types'\n\t    );\n\t  };\n\t  shim.isRequired = shim;\n\t  function getShim() {\n\t    return shim;\n\t  };\n\t  // Important!\n\t  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\t  var ReactPropTypes = {\n\t    array: shim,\n\t    bool: shim,\n\t    func: shim,\n\t    number: shim,\n\t    object: shim,\n\t    string: shim,\n\t    symbol: shim,\n\t\n\t    any: shim,\n\t    arrayOf: getShim,\n\t    element: shim,\n\t    instanceOf: getShim,\n\t    node: shim,\n\t    objectOf: getShim,\n\t    oneOf: getShim,\n\t    oneOfType: getShim,\n\t    shape: getShim,\n\t    exact: getShim\n\t  };\n\t\n\t  ReactPropTypes.checkPropTypes = emptyFunction;\n\t  ReactPropTypes.PropTypes = ReactPropTypes;\n\t\n\t  return ReactPropTypes;\n\t};\n\t\n\t\n\t/***/ }),\n\t/* 18 */\n\t/***/ (function(module, exports) {\n\t\n\tmodule.exports = __webpack_require__(1);\n\t\n\t/***/ }),\n\t/* 19 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar baseRest = __webpack_require__(20),\n\t    unzipWith = __webpack_require__(38);\n\t\n\t/**\n\t * This method is like `_.zip` except that it accepts `iteratee` to specify\n\t * how grouped values should be combined. The iteratee is invoked with the\n\t * elements of each group: (...group).\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 3.8.0\n\t * @category Array\n\t * @param {...Array} [arrays] The arrays to process.\n\t * @param {Function} [iteratee=_.identity] The function to combine\n\t *  grouped values.\n\t * @returns {Array} Returns the new array of grouped elements.\n\t * @example\n\t *\n\t * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n\t *   return a + b + c;\n\t * });\n\t * // => [111, 222]\n\t */\n\tvar zipWith = baseRest(function(arrays) {\n\t  var length = arrays.length,\n\t      iteratee = length > 1 ? arrays[length - 1] : undefined;\n\t\n\t  iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n\t  return unzipWith(arrays, iteratee);\n\t});\n\t\n\tmodule.exports = zipWith;\n\t\n\t\n\t/***/ }),\n\t/* 20 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar identity = __webpack_require__(5),\n\t    overRest = __webpack_require__(21),\n\t    setToString = __webpack_require__(22);\n\t\n\t/**\n\t * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n\t *\n\t * @private\n\t * @param {Function} func The function to apply a rest parameter to.\n\t * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t * @returns {Function} Returns the new function.\n\t */\n\tfunction baseRest(func, start) {\n\t  return setToString(overRest(func, start, identity), func + '');\n\t}\n\t\n\tmodule.exports = baseRest;\n\t\n\t\n\t/***/ }),\n\t/* 21 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar apply = __webpack_require__(6);\n\t\n\t/* Built-in method references for those with the same name as other `lodash` methods. */\n\tvar nativeMax = Math.max;\n\t\n\t/**\n\t * A specialized version of `baseRest` which transforms the rest array.\n\t *\n\t * @private\n\t * @param {Function} func The function to apply a rest parameter to.\n\t * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t * @param {Function} transform The rest array transform.\n\t * @returns {Function} Returns the new function.\n\t */\n\tfunction overRest(func, start, transform) {\n\t  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n\t  return function() {\n\t    var args = arguments,\n\t        index = -1,\n\t        length = nativeMax(args.length - start, 0),\n\t        array = Array(length);\n\t\n\t    while (++index < length) {\n\t      array[index] = args[start + index];\n\t    }\n\t    index = -1;\n\t    var otherArgs = Array(start + 1);\n\t    while (++index < start) {\n\t      otherArgs[index] = args[index];\n\t    }\n\t    otherArgs[start] = transform(array);\n\t    return apply(func, this, otherArgs);\n\t  };\n\t}\n\t\n\tmodule.exports = overRest;\n\t\n\t\n\t/***/ }),\n\t/* 22 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar baseSetToString = __webpack_require__(23),\n\t    shortOut = __webpack_require__(37);\n\t\n\t/**\n\t * Sets the `toString` method of `func` to return `string`.\n\t *\n\t * @private\n\t * @param {Function} func The function to modify.\n\t * @param {Function} string The `toString` result.\n\t * @returns {Function} Returns `func`.\n\t */\n\tvar setToString = shortOut(baseSetToString);\n\t\n\tmodule.exports = setToString;\n\t\n\t\n\t/***/ }),\n\t/* 23 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar constant = __webpack_require__(24),\n\t    defineProperty = __webpack_require__(25),\n\t    identity = __webpack_require__(5);\n\t\n\t/**\n\t * The base implementation of `setToString` without support for hot loop shorting.\n\t *\n\t * @private\n\t * @param {Function} func The function to modify.\n\t * @param {Function} string The `toString` result.\n\t * @returns {Function} Returns `func`.\n\t */\n\tvar baseSetToString = !defineProperty ? identity : function(func, string) {\n\t  return defineProperty(func, 'toString', {\n\t    'configurable': true,\n\t    'enumerable': false,\n\t    'value': constant(string),\n\t    'writable': true\n\t  });\n\t};\n\t\n\tmodule.exports = baseSetToString;\n\t\n\t\n\t/***/ }),\n\t/* 24 */\n\t/***/ (function(module, exports) {\n\t\n\t/**\n\t * Creates a function that returns `value`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 2.4.0\n\t * @category Util\n\t * @param {*} value The value to return from the new function.\n\t * @returns {Function} Returns the new constant function.\n\t * @example\n\t *\n\t * var objects = _.times(2, _.constant({ 'a': 1 }));\n\t *\n\t * console.log(objects);\n\t * // => [{ 'a': 1 }, { 'a': 1 }]\n\t *\n\t * console.log(objects[0] === objects[1]);\n\t * // => true\n\t */\n\tfunction constant(value) {\n\t  return function() {\n\t    return value;\n\t  };\n\t}\n\t\n\tmodule.exports = constant;\n\t\n\t\n\t/***/ }),\n\t/* 25 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar getNative = __webpack_require__(26);\n\t\n\tvar defineProperty = (function() {\n\t  try {\n\t    var func = getNative(Object, 'defineProperty');\n\t    func({}, '', {});\n\t    return func;\n\t  } catch (e) {}\n\t}());\n\t\n\tmodule.exports = defineProperty;\n\t\n\t\n\t/***/ }),\n\t/* 26 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar baseIsNative = __webpack_require__(27),\n\t    getValue = __webpack_require__(36);\n\t\n\t/**\n\t * Gets the native function at `key` of `object`.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @param {string} key The key of the method to get.\n\t * @returns {*} Returns the function if it's native, else `undefined`.\n\t */\n\tfunction getNative(object, key) {\n\t  var value = getValue(object, key);\n\t  return baseIsNative(value) ? value : undefined;\n\t}\n\t\n\tmodule.exports = getNative;\n\t\n\t\n\t/***/ }),\n\t/* 27 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar isFunction = __webpack_require__(7),\n\t    isMasked = __webpack_require__(33),\n\t    isObject = __webpack_require__(10),\n\t    toSource = __webpack_require__(35);\n\t\n\t/**\n\t * Used to match `RegExp`\n\t * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n\t */\n\tvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\t\n\t/** Used to detect host constructors (Safari). */\n\tvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t/** Used for built-in method references. */\n\tvar funcProto = Function.prototype,\n\t    objectProto = Object.prototype;\n\t\n\t/** Used to resolve the decompiled source of functions. */\n\tvar funcToString = funcProto.toString;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/** Used to detect if a method is native. */\n\tvar reIsNative = RegExp('^' +\n\t  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n\t  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t);\n\t\n\t/**\n\t * The base implementation of `_.isNative` without bad shim checks.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a native function,\n\t *  else `false`.\n\t */\n\tfunction baseIsNative(value) {\n\t  if (!isObject(value) || isMasked(value)) {\n\t    return false;\n\t  }\n\t  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n\t  return pattern.test(toSource(value));\n\t}\n\t\n\tmodule.exports = baseIsNative;\n\t\n\t\n\t/***/ }),\n\t/* 28 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar Symbol = __webpack_require__(8),\n\t    getRawTag = __webpack_require__(31),\n\t    objectToString = __webpack_require__(32);\n\t\n\t/** `Object#toString` result references. */\n\tvar nullTag = '[object Null]',\n\t    undefinedTag = '[object Undefined]';\n\t\n\t/** Built-in value references. */\n\tvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\t\n\t/**\n\t * The base implementation of `getTag` without fallbacks for buggy environments.\n\t *\n\t * @private\n\t * @param {*} value The value to query.\n\t * @returns {string} Returns the `toStringTag`.\n\t */\n\tfunction baseGetTag(value) {\n\t  if (value == null) {\n\t    return value === undefined ? undefinedTag : nullTag;\n\t  }\n\t  return (symToStringTag && symToStringTag in Object(value))\n\t    ? getRawTag(value)\n\t    : objectToString(value);\n\t}\n\t\n\tmodule.exports = baseGetTag;\n\t\n\t\n\t/***/ }),\n\t/* 29 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */\n\tvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\t\n\tmodule.exports = freeGlobal;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(30)))\n\t\n\t/***/ }),\n\t/* 30 */\n\t/***/ (function(module, exports) {\n\t\n\tvar g;\r\n\t\r\n\t// This works in non-strict mode\r\n\tg = (function() {\r\n\t\treturn this;\r\n\t})();\r\n\t\r\n\ttry {\r\n\t\t// This works if eval is allowed (see CSP)\r\n\t\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n\t} catch(e) {\r\n\t\t// This works if the window reference is available\r\n\t\tif(typeof window === \"object\")\r\n\t\t\tg = window;\r\n\t}\r\n\t\r\n\t// g can still be undefined, but nothing to do about it...\r\n\t// We return undefined, instead of nothing here, so it's\r\n\t// easier to handle this case. if(!global) { ...}\r\n\t\r\n\tmodule.exports = g;\r\n\t\n\t\n\t/***/ }),\n\t/* 31 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar Symbol = __webpack_require__(8);\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * Used to resolve the\n\t * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar nativeObjectToString = objectProto.toString;\n\t\n\t/** Built-in value references. */\n\tvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\t\n\t/**\n\t * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n\t *\n\t * @private\n\t * @param {*} value The value to query.\n\t * @returns {string} Returns the raw `toStringTag`.\n\t */\n\tfunction getRawTag(value) {\n\t  var isOwn = hasOwnProperty.call(value, symToStringTag),\n\t      tag = value[symToStringTag];\n\t\n\t  try {\n\t    value[symToStringTag] = undefined;\n\t    var unmasked = true;\n\t  } catch (e) {}\n\t\n\t  var result = nativeObjectToString.call(value);\n\t  if (unmasked) {\n\t    if (isOwn) {\n\t      value[symToStringTag] = tag;\n\t    } else {\n\t      delete value[symToStringTag];\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = getRawTag;\n\t\n\t\n\t/***/ }),\n\t/* 32 */\n\t/***/ (function(module, exports) {\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/**\n\t * Used to resolve the\n\t * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar nativeObjectToString = objectProto.toString;\n\t\n\t/**\n\t * Converts `value` to a string using `Object.prototype.toString`.\n\t *\n\t * @private\n\t * @param {*} value The value to convert.\n\t * @returns {string} Returns the converted string.\n\t */\n\tfunction objectToString(value) {\n\t  return nativeObjectToString.call(value);\n\t}\n\t\n\tmodule.exports = objectToString;\n\t\n\t\n\t/***/ }),\n\t/* 33 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar coreJsData = __webpack_require__(34);\n\t\n\t/** Used to detect methods masquerading as native. */\n\tvar maskSrcKey = (function() {\n\t  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n\t  return uid ? ('Symbol(src)_1.' + uid) : '';\n\t}());\n\t\n\t/**\n\t * Checks if `func` has its source masked.\n\t *\n\t * @private\n\t * @param {Function} func The function to check.\n\t * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n\t */\n\tfunction isMasked(func) {\n\t  return !!maskSrcKey && (maskSrcKey in func);\n\t}\n\t\n\tmodule.exports = isMasked;\n\t\n\t\n\t/***/ }),\n\t/* 34 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar root = __webpack_require__(9);\n\t\n\t/** Used to detect overreaching core-js shims. */\n\tvar coreJsData = root['__core-js_shared__'];\n\t\n\tmodule.exports = coreJsData;\n\t\n\t\n\t/***/ }),\n\t/* 35 */\n\t/***/ (function(module, exports) {\n\t\n\t/** Used for built-in method references. */\n\tvar funcProto = Function.prototype;\n\t\n\t/** Used to resolve the decompiled source of functions. */\n\tvar funcToString = funcProto.toString;\n\t\n\t/**\n\t * Converts `func` to its source code.\n\t *\n\t * @private\n\t * @param {Function} func The function to convert.\n\t * @returns {string} Returns the source code.\n\t */\n\tfunction toSource(func) {\n\t  if (func != null) {\n\t    try {\n\t      return funcToString.call(func);\n\t    } catch (e) {}\n\t    try {\n\t      return (func + '');\n\t    } catch (e) {}\n\t  }\n\t  return '';\n\t}\n\t\n\tmodule.exports = toSource;\n\t\n\t\n\t/***/ }),\n\t/* 36 */\n\t/***/ (function(module, exports) {\n\t\n\t/**\n\t * Gets the value at `key` of `object`.\n\t *\n\t * @private\n\t * @param {Object} [object] The object to query.\n\t * @param {string} key The key of the property to get.\n\t * @returns {*} Returns the property value.\n\t */\n\tfunction getValue(object, key) {\n\t  return object == null ? undefined : object[key];\n\t}\n\t\n\tmodule.exports = getValue;\n\t\n\t\n\t/***/ }),\n\t/* 37 */\n\t/***/ (function(module, exports) {\n\t\n\t/** Used to detect hot functions by number of calls within a span of milliseconds. */\n\tvar HOT_COUNT = 800,\n\t    HOT_SPAN = 16;\n\t\n\t/* Built-in method references for those with the same name as other `lodash` methods. */\n\tvar nativeNow = Date.now;\n\t\n\t/**\n\t * Creates a function that'll short out and invoke `identity` instead\n\t * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n\t * milliseconds.\n\t *\n\t * @private\n\t * @param {Function} func The function to restrict.\n\t * @returns {Function} Returns the new shortable function.\n\t */\n\tfunction shortOut(func) {\n\t  var count = 0,\n\t      lastCalled = 0;\n\t\n\t  return function() {\n\t    var stamp = nativeNow(),\n\t        remaining = HOT_SPAN - (stamp - lastCalled);\n\t\n\t    lastCalled = stamp;\n\t    if (remaining > 0) {\n\t      if (++count >= HOT_COUNT) {\n\t        return arguments[0];\n\t      }\n\t    } else {\n\t      count = 0;\n\t    }\n\t    return func.apply(undefined, arguments);\n\t  };\n\t}\n\t\n\tmodule.exports = shortOut;\n\t\n\t\n\t/***/ }),\n\t/* 38 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar apply = __webpack_require__(6),\n\t    arrayMap = __webpack_require__(11),\n\t    unzip = __webpack_require__(39);\n\t\n\t/**\n\t * This method is like `_.unzip` except that it accepts `iteratee` to specify\n\t * how regrouped values should be combined. The iteratee is invoked with the\n\t * elements of each group: (...group).\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 3.8.0\n\t * @category Array\n\t * @param {Array} array The array of grouped elements to process.\n\t * @param {Function} [iteratee=_.identity] The function to combine\n\t *  regrouped values.\n\t * @returns {Array} Returns the new array of regrouped elements.\n\t * @example\n\t *\n\t * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n\t * // => [[1, 10, 100], [2, 20, 200]]\n\t *\n\t * _.unzipWith(zipped, _.add);\n\t * // => [3, 30, 300]\n\t */\n\tfunction unzipWith(array, iteratee) {\n\t  if (!(array && array.length)) {\n\t    return [];\n\t  }\n\t  var result = unzip(array);\n\t  if (iteratee == null) {\n\t    return result;\n\t  }\n\t  return arrayMap(result, function(group) {\n\t    return apply(iteratee, undefined, group);\n\t  });\n\t}\n\t\n\tmodule.exports = unzipWith;\n\t\n\t\n\t/***/ }),\n\t/* 39 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar arrayFilter = __webpack_require__(40),\n\t    arrayMap = __webpack_require__(11),\n\t    baseProperty = __webpack_require__(41),\n\t    baseTimes = __webpack_require__(42),\n\t    isArrayLikeObject = __webpack_require__(43);\n\t\n\t/* Built-in method references for those with the same name as other `lodash` methods. */\n\tvar nativeMax = Math.max;\n\t\n\t/**\n\t * This method is like `_.zip` except that it accepts an array of grouped\n\t * elements and creates an array regrouping the elements to their pre-zip\n\t * configuration.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 1.2.0\n\t * @category Array\n\t * @param {Array} array The array of grouped elements to process.\n\t * @returns {Array} Returns the new array of regrouped elements.\n\t * @example\n\t *\n\t * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n\t * // => [['a', 1, true], ['b', 2, false]]\n\t *\n\t * _.unzip(zipped);\n\t * // => [['a', 'b'], [1, 2], [true, false]]\n\t */\n\tfunction unzip(array) {\n\t  if (!(array && array.length)) {\n\t    return [];\n\t  }\n\t  var length = 0;\n\t  array = arrayFilter(array, function(group) {\n\t    if (isArrayLikeObject(group)) {\n\t      length = nativeMax(group.length, length);\n\t      return true;\n\t    }\n\t  });\n\t  return baseTimes(length, function(index) {\n\t    return arrayMap(array, baseProperty(index));\n\t  });\n\t}\n\t\n\tmodule.exports = unzip;\n\t\n\t\n\t/***/ }),\n\t/* 40 */\n\t/***/ (function(module, exports) {\n\t\n\t/**\n\t * A specialized version of `_.filter` for arrays without support for\n\t * iteratee shorthands.\n\t *\n\t * @private\n\t * @param {Array} [array] The array to iterate over.\n\t * @param {Function} predicate The function invoked per iteration.\n\t * @returns {Array} Returns the new filtered array.\n\t */\n\tfunction arrayFilter(array, predicate) {\n\t  var index = -1,\n\t      length = array == null ? 0 : array.length,\n\t      resIndex = 0,\n\t      result = [];\n\t\n\t  while (++index < length) {\n\t    var value = array[index];\n\t    if (predicate(value, index, array)) {\n\t      result[resIndex++] = value;\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = arrayFilter;\n\t\n\t\n\t/***/ }),\n\t/* 41 */\n\t/***/ (function(module, exports) {\n\t\n\t/**\n\t * The base implementation of `_.property` without support for deep paths.\n\t *\n\t * @private\n\t * @param {string} key The key of the property to get.\n\t * @returns {Function} Returns the new accessor function.\n\t */\n\tfunction baseProperty(key) {\n\t  return function(object) {\n\t    return object == null ? undefined : object[key];\n\t  };\n\t}\n\t\n\tmodule.exports = baseProperty;\n\t\n\t\n\t/***/ }),\n\t/* 42 */\n\t/***/ (function(module, exports) {\n\t\n\t/**\n\t * The base implementation of `_.times` without support for iteratee shorthands\n\t * or max array length checks.\n\t *\n\t * @private\n\t * @param {number} n The number of times to invoke `iteratee`.\n\t * @param {Function} iteratee The function invoked per iteration.\n\t * @returns {Array} Returns the array of results.\n\t */\n\tfunction baseTimes(n, iteratee) {\n\t  var index = -1,\n\t      result = Array(n);\n\t\n\t  while (++index < n) {\n\t    result[index] = iteratee(index);\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = baseTimes;\n\t\n\t\n\t/***/ }),\n\t/* 43 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar isArrayLike = __webpack_require__(44),\n\t    isObjectLike = __webpack_require__(46);\n\t\n\t/**\n\t * This method is like `_.isArrayLike` except that it also checks if `value`\n\t * is an object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an array-like object,\n\t *  else `false`.\n\t * @example\n\t *\n\t * _.isArrayLikeObject([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isArrayLikeObject(document.body.children);\n\t * // => true\n\t *\n\t * _.isArrayLikeObject('abc');\n\t * // => false\n\t *\n\t * _.isArrayLikeObject(_.noop);\n\t * // => false\n\t */\n\tfunction isArrayLikeObject(value) {\n\t  return isObjectLike(value) && isArrayLike(value);\n\t}\n\t\n\tmodule.exports = isArrayLikeObject;\n\t\n\t\n\t/***/ }),\n\t/* 44 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar isFunction = __webpack_require__(7),\n\t    isLength = __webpack_require__(45);\n\t\n\t/**\n\t * Checks if `value` is array-like. A value is considered array-like if it's\n\t * not a function and has a `value.length` that's an integer greater than or\n\t * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t * @example\n\t *\n\t * _.isArrayLike([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isArrayLike(document.body.children);\n\t * // => true\n\t *\n\t * _.isArrayLike('abc');\n\t * // => true\n\t *\n\t * _.isArrayLike(_.noop);\n\t * // => false\n\t */\n\tfunction isArrayLike(value) {\n\t  return value != null && isLength(value.length) && !isFunction(value);\n\t}\n\t\n\tmodule.exports = isArrayLike;\n\t\n\t\n\t/***/ }),\n\t/* 45 */\n\t/***/ (function(module, exports) {\n\t\n\t/** Used as references for various `Number` constants. */\n\tvar MAX_SAFE_INTEGER = 9007199254740991;\n\t\n\t/**\n\t * Checks if `value` is a valid array-like length.\n\t *\n\t * **Note:** This method is loosely based on\n\t * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t * @example\n\t *\n\t * _.isLength(3);\n\t * // => true\n\t *\n\t * _.isLength(Number.MIN_VALUE);\n\t * // => false\n\t *\n\t * _.isLength(Infinity);\n\t * // => false\n\t *\n\t * _.isLength('3');\n\t * // => false\n\t */\n\tfunction isLength(value) {\n\t  return typeof value == 'number' &&\n\t    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t}\n\t\n\tmodule.exports = isLength;\n\t\n\t\n\t/***/ }),\n\t/* 46 */\n\t/***/ (function(module, exports) {\n\t\n\t/**\n\t * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t * and has a `typeof` result of \"object\".\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t * @example\n\t *\n\t * _.isObjectLike({});\n\t * // => true\n\t *\n\t * _.isObjectLike([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObjectLike(_.noop);\n\t * // => false\n\t *\n\t * _.isObjectLike(null);\n\t * // => false\n\t */\n\tfunction isObjectLike(value) {\n\t  return value != null && typeof value == 'object';\n\t}\n\t\n\tmodule.exports = isObjectLike;\n\t\n\t\n\t/***/ }),\n\t/* 47 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/*! Hammer.JS - v2.0.7 - 2016-04-22\n\t * http://hammerjs.github.io/\n\t *\n\t * Copyright (c) 2016 Jorik Tangelder;\n\t * Licensed under the MIT license */\n\t(function(window, document, exportName, undefined) {\n\t  'use strict';\n\t\n\tvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\n\tvar TEST_ELEMENT = document.createElement('div');\n\t\n\tvar TYPE_FUNCTION = 'function';\n\t\n\tvar round = Math.round;\n\tvar abs = Math.abs;\n\tvar now = Date.now;\n\t\n\t/**\n\t * set a timeout with a given scope\n\t * @param {Function} fn\n\t * @param {Number} timeout\n\t * @param {Object} context\n\t * @returns {number}\n\t */\n\tfunction setTimeoutContext(fn, timeout, context) {\n\t    return setTimeout(bindFn(fn, context), timeout);\n\t}\n\t\n\t/**\n\t * if the argument is an array, we want to execute the fn on each entry\n\t * if it aint an array we don't want to do a thing.\n\t * this is used by all the methods that accept a single and array argument.\n\t * @param {*|Array} arg\n\t * @param {String} fn\n\t * @param {Object} [context]\n\t * @returns {Boolean}\n\t */\n\tfunction invokeArrayArg(arg, fn, context) {\n\t    if (Array.isArray(arg)) {\n\t        each(arg, context[fn], context);\n\t        return true;\n\t    }\n\t    return false;\n\t}\n\t\n\t/**\n\t * walk objects and arrays\n\t * @param {Object} obj\n\t * @param {Function} iterator\n\t * @param {Object} context\n\t */\n\tfunction each(obj, iterator, context) {\n\t    var i;\n\t\n\t    if (!obj) {\n\t        return;\n\t    }\n\t\n\t    if (obj.forEach) {\n\t        obj.forEach(iterator, context);\n\t    } else if (obj.length !== undefined) {\n\t        i = 0;\n\t        while (i < obj.length) {\n\t            iterator.call(context, obj[i], i, obj);\n\t            i++;\n\t        }\n\t    } else {\n\t        for (i in obj) {\n\t            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n\t        }\n\t    }\n\t}\n\t\n\t/**\n\t * wrap a method with a deprecation warning and stack trace\n\t * @param {Function} method\n\t * @param {String} name\n\t * @param {String} message\n\t * @returns {Function} A new function wrapping the supplied method.\n\t */\n\tfunction deprecate(method, name, message) {\n\t    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n\t    return function() {\n\t        var e = new Error('get-stack-trace');\n\t        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n\t            .replace(/^\\s+at\\s+/gm, '')\n\t            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\t\n\t        var log = window.console && (window.console.warn || window.console.log);\n\t        if (log) {\n\t            log.call(window.console, deprecationMessage, stack);\n\t        }\n\t        return method.apply(this, arguments);\n\t    };\n\t}\n\t\n\t/**\n\t * extend object.\n\t * means that properties in dest will be overwritten by the ones in src.\n\t * @param {Object} target\n\t * @param {...Object} objects_to_assign\n\t * @returns {Object} target\n\t */\n\tvar assign;\n\tif (typeof Object.assign !== 'function') {\n\t    assign = function assign(target) {\n\t        if (target === undefined || target === null) {\n\t            throw new TypeError('Cannot convert undefined or null to object');\n\t        }\n\t\n\t        var output = Object(target);\n\t        for (var index = 1; index < arguments.length; index++) {\n\t            var source = arguments[index];\n\t            if (source !== undefined && source !== null) {\n\t                for (var nextKey in source) {\n\t                    if (source.hasOwnProperty(nextKey)) {\n\t                        output[nextKey] = source[nextKey];\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return output;\n\t    };\n\t} else {\n\t    assign = Object.assign;\n\t}\n\t\n\t/**\n\t * extend object.\n\t * means that properties in dest will be overwritten by the ones in src.\n\t * @param {Object} dest\n\t * @param {Object} src\n\t * @param {Boolean} [merge=false]\n\t * @returns {Object} dest\n\t */\n\tvar extend = deprecate(function extend(dest, src, merge) {\n\t    var keys = Object.keys(src);\n\t    var i = 0;\n\t    while (i < keys.length) {\n\t        if (!merge || (merge && dest[keys[i]] === undefined)) {\n\t            dest[keys[i]] = src[keys[i]];\n\t        }\n\t        i++;\n\t    }\n\t    return dest;\n\t}, 'extend', 'Use `assign`.');\n\t\n\t/**\n\t * merge the values from src in the dest.\n\t * means that properties that exist in dest will not be overwritten by src\n\t * @param {Object} dest\n\t * @param {Object} src\n\t * @returns {Object} dest\n\t */\n\tvar merge = deprecate(function merge(dest, src) {\n\t    return extend(dest, src, true);\n\t}, 'merge', 'Use `assign`.');\n\t\n\t/**\n\t * simple class inheritance\n\t * @param {Function} child\n\t * @param {Function} base\n\t * @param {Object} [properties]\n\t */\n\tfunction inherit(child, base, properties) {\n\t    var baseP = base.prototype,\n\t        childP;\n\t\n\t    childP = child.prototype = Object.create(baseP);\n\t    childP.constructor = child;\n\t    childP._super = baseP;\n\t\n\t    if (properties) {\n\t        assign(childP, properties);\n\t    }\n\t}\n\t\n\t/**\n\t * simple function bind\n\t * @param {Function} fn\n\t * @param {Object} context\n\t * @returns {Function}\n\t */\n\tfunction bindFn(fn, context) {\n\t    return function boundFn() {\n\t        return fn.apply(context, arguments);\n\t    };\n\t}\n\t\n\t/**\n\t * let a boolean value also be a function that must return a boolean\n\t * this first item in args will be used as the context\n\t * @param {Boolean|Function} val\n\t * @param {Array} [args]\n\t * @returns {Boolean}\n\t */\n\tfunction boolOrFn(val, args) {\n\t    if (typeof val == TYPE_FUNCTION) {\n\t        return val.apply(args ? args[0] || undefined : undefined, args);\n\t    }\n\t    return val;\n\t}\n\t\n\t/**\n\t * use the val2 when val1 is undefined\n\t * @param {*} val1\n\t * @param {*} val2\n\t * @returns {*}\n\t */\n\tfunction ifUndefined(val1, val2) {\n\t    return (val1 === undefined) ? val2 : val1;\n\t}\n\t\n\t/**\n\t * addEventListener with multiple events at once\n\t * @param {EventTarget} target\n\t * @param {String} types\n\t * @param {Function} handler\n\t */\n\tfunction addEventListeners(target, types, handler) {\n\t    each(splitStr(types), function(type) {\n\t        target.addEventListener(type, handler, false);\n\t    });\n\t}\n\t\n\t/**\n\t * removeEventListener with multiple events at once\n\t * @param {EventTarget} target\n\t * @param {String} types\n\t * @param {Function} handler\n\t */\n\tfunction removeEventListeners(target, types, handler) {\n\t    each(splitStr(types), function(type) {\n\t        target.removeEventListener(type, handler, false);\n\t    });\n\t}\n\t\n\t/**\n\t * find if a node is in the given parent\n\t * @method hasParent\n\t * @param {HTMLElement} node\n\t * @param {HTMLElement} parent\n\t * @return {Boolean} found\n\t */\n\tfunction hasParent(node, parent) {\n\t    while (node) {\n\t        if (node == parent) {\n\t            return true;\n\t        }\n\t        node = node.parentNode;\n\t    }\n\t    return false;\n\t}\n\t\n\t/**\n\t * small indexOf wrapper\n\t * @param {String} str\n\t * @param {String} find\n\t * @returns {Boolean} found\n\t */\n\tfunction inStr(str, find) {\n\t    return str.indexOf(find) > -1;\n\t}\n\t\n\t/**\n\t * split string on whitespace\n\t * @param {String} str\n\t * @returns {Array} words\n\t */\n\tfunction splitStr(str) {\n\t    return str.trim().split(/\\s+/g);\n\t}\n\t\n\t/**\n\t * find if a array contains the object using indexOf or a simple polyFill\n\t * @param {Array} src\n\t * @param {String} find\n\t * @param {String} [findByKey]\n\t * @return {Boolean|Number} false when not found, or the index\n\t */\n\tfunction inArray(src, find, findByKey) {\n\t    if (src.indexOf && !findByKey) {\n\t        return src.indexOf(find);\n\t    } else {\n\t        var i = 0;\n\t        while (i < src.length) {\n\t            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n\t                return i;\n\t            }\n\t            i++;\n\t        }\n\t        return -1;\n\t    }\n\t}\n\t\n\t/**\n\t * convert array-like objects to real arrays\n\t * @param {Object} obj\n\t * @returns {Array}\n\t */\n\tfunction toArray(obj) {\n\t    return Array.prototype.slice.call(obj, 0);\n\t}\n\t\n\t/**\n\t * unique array with objects based on a key (like 'id') or just by the array's value\n\t * @param {Array} src [{id:1},{id:2},{id:1}]\n\t * @param {String} [key]\n\t * @param {Boolean} [sort=False]\n\t * @returns {Array} [{id:1},{id:2}]\n\t */\n\tfunction uniqueArray(src, key, sort) {\n\t    var results = [];\n\t    var values = [];\n\t    var i = 0;\n\t\n\t    while (i < src.length) {\n\t        var val = key ? src[i][key] : src[i];\n\t        if (inArray(values, val) < 0) {\n\t            results.push(src[i]);\n\t        }\n\t        values[i] = val;\n\t        i++;\n\t    }\n\t\n\t    if (sort) {\n\t        if (!key) {\n\t            results = results.sort();\n\t        } else {\n\t            results = results.sort(function sortUniqueArray(a, b) {\n\t                return a[key] > b[key];\n\t            });\n\t        }\n\t    }\n\t\n\t    return results;\n\t}\n\t\n\t/**\n\t * get the prefixed property\n\t * @param {Object} obj\n\t * @param {String} property\n\t * @returns {String|Undefined} prefixed\n\t */\n\tfunction prefixed(obj, property) {\n\t    var prefix, prop;\n\t    var camelProp = property[0].toUpperCase() + property.slice(1);\n\t\n\t    var i = 0;\n\t    while (i < VENDOR_PREFIXES.length) {\n\t        prefix = VENDOR_PREFIXES[i];\n\t        prop = (prefix) ? prefix + camelProp : property;\n\t\n\t        if (prop in obj) {\n\t            return prop;\n\t        }\n\t        i++;\n\t    }\n\t    return undefined;\n\t}\n\t\n\t/**\n\t * get a unique id\n\t * @returns {number} uniqueId\n\t */\n\tvar _uniqueId = 1;\n\tfunction uniqueId() {\n\t    return _uniqueId++;\n\t}\n\t\n\t/**\n\t * get the window object of an element\n\t * @param {HTMLElement} element\n\t * @returns {DocumentView|Window}\n\t */\n\tfunction getWindowForElement(element) {\n\t    var doc = element.ownerDocument || element;\n\t    return (doc.defaultView || doc.parentWindow || window);\n\t}\n\t\n\tvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\t\n\tvar SUPPORT_TOUCH = ('ontouchstart' in window);\n\tvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\n\tvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\t\n\tvar INPUT_TYPE_TOUCH = 'touch';\n\tvar INPUT_TYPE_PEN = 'pen';\n\tvar INPUT_TYPE_MOUSE = 'mouse';\n\tvar INPUT_TYPE_KINECT = 'kinect';\n\t\n\tvar COMPUTE_INTERVAL = 25;\n\t\n\tvar INPUT_START = 1;\n\tvar INPUT_MOVE = 2;\n\tvar INPUT_END = 4;\n\tvar INPUT_CANCEL = 8;\n\t\n\tvar DIRECTION_NONE = 1;\n\tvar DIRECTION_LEFT = 2;\n\tvar DIRECTION_RIGHT = 4;\n\tvar DIRECTION_UP = 8;\n\tvar DIRECTION_DOWN = 16;\n\t\n\tvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\n\tvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\n\tvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\t\n\tvar PROPS_XY = ['x', 'y'];\n\tvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\t\n\t/**\n\t * create new input type manager\n\t * @param {Manager} manager\n\t * @param {Function} callback\n\t * @returns {Input}\n\t * @constructor\n\t */\n\tfunction Input(manager, callback) {\n\t    var self = this;\n\t    this.manager = manager;\n\t    this.callback = callback;\n\t    this.element = manager.element;\n\t    this.target = manager.options.inputTarget;\n\t\n\t    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n\t    // so when disabled the input events are completely bypassed.\n\t    this.domHandler = function(ev) {\n\t        if (boolOrFn(manager.options.enable, [manager])) {\n\t            self.handler(ev);\n\t        }\n\t    };\n\t\n\t    this.init();\n\t\n\t}\n\t\n\tInput.prototype = {\n\t    /**\n\t     * should handle the inputEvent data and trigger the callback\n\t     * @virtual\n\t     */\n\t    handler: function() { },\n\t\n\t    /**\n\t     * bind the events\n\t     */\n\t    init: function() {\n\t        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n\t        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n\t        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n\t    },\n\t\n\t    /**\n\t     * unbind the events\n\t     */\n\t    destroy: function() {\n\t        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n\t        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n\t        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n\t    }\n\t};\n\t\n\t/**\n\t * create new input type manager\n\t * called by the Manager constructor\n\t * @param {Hammer} manager\n\t * @returns {Input}\n\t */\n\tfunction createInputInstance(manager) {\n\t    var Type;\n\t    var inputClass = manager.options.inputClass;\n\t\n\t    if (inputClass) {\n\t        Type = inputClass;\n\t    } else if (SUPPORT_POINTER_EVENTS) {\n\t        Type = PointerEventInput;\n\t    } else if (SUPPORT_ONLY_TOUCH) {\n\t        Type = TouchInput;\n\t    } else if (!SUPPORT_TOUCH) {\n\t        Type = MouseInput;\n\t    } else {\n\t        Type = TouchMouseInput;\n\t    }\n\t    return new (Type)(manager, inputHandler);\n\t}\n\t\n\t/**\n\t * handle input events\n\t * @param {Manager} manager\n\t * @param {String} eventType\n\t * @param {Object} input\n\t */\n\tfunction inputHandler(manager, eventType, input) {\n\t    var pointersLen = input.pointers.length;\n\t    var changedPointersLen = input.changedPointers.length;\n\t    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n\t    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\t\n\t    input.isFirst = !!isFirst;\n\t    input.isFinal = !!isFinal;\n\t\n\t    if (isFirst) {\n\t        manager.session = {};\n\t    }\n\t\n\t    // source event is the normalized value of the domEvents\n\t    // like 'touchstart, mouseup, pointerdown'\n\t    input.eventType = eventType;\n\t\n\t    // compute scale, rotation etc\n\t    computeInputData(manager, input);\n\t\n\t    // emit secret event\n\t    manager.emit('hammer.input', input);\n\t\n\t    manager.recognize(input);\n\t    manager.session.prevInput = input;\n\t}\n\t\n\t/**\n\t * extend the data with some usable properties like scale, rotate, velocity etc\n\t * @param {Object} manager\n\t * @param {Object} input\n\t */\n\tfunction computeInputData(manager, input) {\n\t    var session = manager.session;\n\t    var pointers = input.pointers;\n\t    var pointersLength = pointers.length;\n\t\n\t    // store the first input to calculate the distance and direction\n\t    if (!session.firstInput) {\n\t        session.firstInput = simpleCloneInputData(input);\n\t    }\n\t\n\t    // to compute scale and rotation we need to store the multiple touches\n\t    if (pointersLength > 1 && !session.firstMultiple) {\n\t        session.firstMultiple = simpleCloneInputData(input);\n\t    } else if (pointersLength === 1) {\n\t        session.firstMultiple = false;\n\t    }\n\t\n\t    var firstInput = session.firstInput;\n\t    var firstMultiple = session.firstMultiple;\n\t    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\t\n\t    var center = input.center = getCenter(pointers);\n\t    input.timeStamp = now();\n\t    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\t\n\t    input.angle = getAngle(offsetCenter, center);\n\t    input.distance = getDistance(offsetCenter, center);\n\t\n\t    computeDeltaXY(session, input);\n\t    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\t\n\t    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n\t    input.overallVelocityX = overallVelocity.x;\n\t    input.overallVelocityY = overallVelocity.y;\n\t    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\t\n\t    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n\t    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\t\n\t    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n\t        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\t\n\t    computeIntervalInputData(session, input);\n\t\n\t    // find the correct target\n\t    var target = manager.element;\n\t    if (hasParent(input.srcEvent.target, target)) {\n\t        target = input.srcEvent.target;\n\t    }\n\t    input.target = target;\n\t}\n\t\n\tfunction computeDeltaXY(session, input) {\n\t    var center = input.center;\n\t    var offset = session.offsetDelta || {};\n\t    var prevDelta = session.prevDelta || {};\n\t    var prevInput = session.prevInput || {};\n\t\n\t    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n\t        prevDelta = session.prevDelta = {\n\t            x: prevInput.deltaX || 0,\n\t            y: prevInput.deltaY || 0\n\t        };\n\t\n\t        offset = session.offsetDelta = {\n\t            x: center.x,\n\t            y: center.y\n\t        };\n\t    }\n\t\n\t    input.deltaX = prevDelta.x + (center.x - offset.x);\n\t    input.deltaY = prevDelta.y + (center.y - offset.y);\n\t}\n\t\n\t/**\n\t * velocity is calculated every x ms\n\t * @param {Object} session\n\t * @param {Object} input\n\t */\n\tfunction computeIntervalInputData(session, input) {\n\t    var last = session.lastInterval || input,\n\t        deltaTime = input.timeStamp - last.timeStamp,\n\t        velocity, velocityX, velocityY, direction;\n\t\n\t    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n\t        var deltaX = input.deltaX - last.deltaX;\n\t        var deltaY = input.deltaY - last.deltaY;\n\t\n\t        var v = getVelocity(deltaTime, deltaX, deltaY);\n\t        velocityX = v.x;\n\t        velocityY = v.y;\n\t        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n\t        direction = getDirection(deltaX, deltaY);\n\t\n\t        session.lastInterval = input;\n\t    } else {\n\t        // use latest velocity info if it doesn't overtake a minimum period\n\t        velocity = last.velocity;\n\t        velocityX = last.velocityX;\n\t        velocityY = last.velocityY;\n\t        direction = last.direction;\n\t    }\n\t\n\t    input.velocity = velocity;\n\t    input.velocityX = velocityX;\n\t    input.velocityY = velocityY;\n\t    input.direction = direction;\n\t}\n\t\n\t/**\n\t * create a simple clone from the input used for storage of firstInput and firstMultiple\n\t * @param {Object} input\n\t * @returns {Object} clonedInputData\n\t */\n\tfunction simpleCloneInputData(input) {\n\t    // make a simple copy of the pointers because we will get a reference if we don't\n\t    // we only need clientXY for the calculations\n\t    var pointers = [];\n\t    var i = 0;\n\t    while (i < input.pointers.length) {\n\t        pointers[i] = {\n\t            clientX: round(input.pointers[i].clientX),\n\t            clientY: round(input.pointers[i].clientY)\n\t        };\n\t        i++;\n\t    }\n\t\n\t    return {\n\t        timeStamp: now(),\n\t        pointers: pointers,\n\t        center: getCenter(pointers),\n\t        deltaX: input.deltaX,\n\t        deltaY: input.deltaY\n\t    };\n\t}\n\t\n\t/**\n\t * get the center of all the pointers\n\t * @param {Array} pointers\n\t * @return {Object} center contains `x` and `y` properties\n\t */\n\tfunction getCenter(pointers) {\n\t    var pointersLength = pointers.length;\n\t\n\t    // no need to loop when only one touch\n\t    if (pointersLength === 1) {\n\t        return {\n\t            x: round(pointers[0].clientX),\n\t            y: round(pointers[0].clientY)\n\t        };\n\t    }\n\t\n\t    var x = 0, y = 0, i = 0;\n\t    while (i < pointersLength) {\n\t        x += pointers[i].clientX;\n\t        y += pointers[i].clientY;\n\t        i++;\n\t    }\n\t\n\t    return {\n\t        x: round(x / pointersLength),\n\t        y: round(y / pointersLength)\n\t    };\n\t}\n\t\n\t/**\n\t * calculate the velocity between two points. unit is in px per ms.\n\t * @param {Number} deltaTime\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Object} velocity `x` and `y`\n\t */\n\tfunction getVelocity(deltaTime, x, y) {\n\t    return {\n\t        x: x / deltaTime || 0,\n\t        y: y / deltaTime || 0\n\t    };\n\t}\n\t\n\t/**\n\t * get the direction between two points\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Number} direction\n\t */\n\tfunction getDirection(x, y) {\n\t    if (x === y) {\n\t        return DIRECTION_NONE;\n\t    }\n\t\n\t    if (abs(x) >= abs(y)) {\n\t        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n\t    }\n\t    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n\t}\n\t\n\t/**\n\t * calculate the absolute distance between two points\n\t * @param {Object} p1 {x, y}\n\t * @param {Object} p2 {x, y}\n\t * @param {Array} [props] containing x and y keys\n\t * @return {Number} distance\n\t */\n\tfunction getDistance(p1, p2, props) {\n\t    if (!props) {\n\t        props = PROPS_XY;\n\t    }\n\t    var x = p2[props[0]] - p1[props[0]],\n\t        y = p2[props[1]] - p1[props[1]];\n\t\n\t    return Math.sqrt((x * x) + (y * y));\n\t}\n\t\n\t/**\n\t * calculate the angle between two coordinates\n\t * @param {Object} p1\n\t * @param {Object} p2\n\t * @param {Array} [props] containing x and y keys\n\t * @return {Number} angle\n\t */\n\tfunction getAngle(p1, p2, props) {\n\t    if (!props) {\n\t        props = PROPS_XY;\n\t    }\n\t    var x = p2[props[0]] - p1[props[0]],\n\t        y = p2[props[1]] - p1[props[1]];\n\t    return Math.atan2(y, x) * 180 / Math.PI;\n\t}\n\t\n\t/**\n\t * calculate the rotation degrees between two pointersets\n\t * @param {Array} start array of pointers\n\t * @param {Array} end array of pointers\n\t * @return {Number} rotation\n\t */\n\tfunction getRotation(start, end) {\n\t    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n\t}\n\t\n\t/**\n\t * calculate the scale factor between two pointersets\n\t * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n\t * @param {Array} start array of pointers\n\t * @param {Array} end array of pointers\n\t * @return {Number} scale\n\t */\n\tfunction getScale(start, end) {\n\t    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n\t}\n\t\n\tvar MOUSE_INPUT_MAP = {\n\t    mousedown: INPUT_START,\n\t    mousemove: INPUT_MOVE,\n\t    mouseup: INPUT_END\n\t};\n\t\n\tvar MOUSE_ELEMENT_EVENTS = 'mousedown';\n\tvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\t\n\t/**\n\t * Mouse events input\n\t * @constructor\n\t * @extends Input\n\t */\n\tfunction MouseInput() {\n\t    this.evEl = MOUSE_ELEMENT_EVENTS;\n\t    this.evWin = MOUSE_WINDOW_EVENTS;\n\t\n\t    this.pressed = false; // mousedown state\n\t\n\t    Input.apply(this, arguments);\n\t}\n\t\n\tinherit(MouseInput, Input, {\n\t    /**\n\t     * handle mouse events\n\t     * @param {Object} ev\n\t     */\n\t    handler: function MEhandler(ev) {\n\t        var eventType = MOUSE_INPUT_MAP[ev.type];\n\t\n\t        // on start we want to have the left mouse button down\n\t        if (eventType & INPUT_START && ev.button === 0) {\n\t            this.pressed = true;\n\t        }\n\t\n\t        if (eventType & INPUT_MOVE && ev.which !== 1) {\n\t            eventType = INPUT_END;\n\t        }\n\t\n\t        // mouse must be down\n\t        if (!this.pressed) {\n\t            return;\n\t        }\n\t\n\t        if (eventType & INPUT_END) {\n\t            this.pressed = false;\n\t        }\n\t\n\t        this.callback(this.manager, eventType, {\n\t            pointers: [ev],\n\t            changedPointers: [ev],\n\t            pointerType: INPUT_TYPE_MOUSE,\n\t            srcEvent: ev\n\t        });\n\t    }\n\t});\n\t\n\tvar POINTER_INPUT_MAP = {\n\t    pointerdown: INPUT_START,\n\t    pointermove: INPUT_MOVE,\n\t    pointerup: INPUT_END,\n\t    pointercancel: INPUT_CANCEL,\n\t    pointerout: INPUT_CANCEL\n\t};\n\t\n\t// in IE10 the pointer types is defined as an enum\n\tvar IE10_POINTER_TYPE_ENUM = {\n\t    2: INPUT_TYPE_TOUCH,\n\t    3: INPUT_TYPE_PEN,\n\t    4: INPUT_TYPE_MOUSE,\n\t    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n\t};\n\t\n\tvar POINTER_ELEMENT_EVENTS = 'pointerdown';\n\tvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\t\n\t// IE10 has prefixed support, and case-sensitive\n\tif (window.MSPointerEvent && !window.PointerEvent) {\n\t    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n\t    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n\t}\n\t\n\t/**\n\t * Pointer events input\n\t * @constructor\n\t * @extends Input\n\t */\n\tfunction PointerEventInput() {\n\t    this.evEl = POINTER_ELEMENT_EVENTS;\n\t    this.evWin = POINTER_WINDOW_EVENTS;\n\t\n\t    Input.apply(this, arguments);\n\t\n\t    this.store = (this.manager.session.pointerEvents = []);\n\t}\n\t\n\tinherit(PointerEventInput, Input, {\n\t    /**\n\t     * handle mouse events\n\t     * @param {Object} ev\n\t     */\n\t    handler: function PEhandler(ev) {\n\t        var store = this.store;\n\t        var removePointer = false;\n\t\n\t        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n\t        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n\t        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\t\n\t        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\t\n\t        // get index of the event in the store\n\t        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\t\n\t        // start and mouse must be down\n\t        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n\t            if (storeIndex < 0) {\n\t                store.push(ev);\n\t                storeIndex = store.length - 1;\n\t            }\n\t        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n\t            removePointer = true;\n\t        }\n\t\n\t        // it not found, so the pointer hasn't been down (so it's probably a hover)\n\t        if (storeIndex < 0) {\n\t            return;\n\t        }\n\t\n\t        // update the event in the store\n\t        store[storeIndex] = ev;\n\t\n\t        this.callback(this.manager, eventType, {\n\t            pointers: store,\n\t            changedPointers: [ev],\n\t            pointerType: pointerType,\n\t            srcEvent: ev\n\t        });\n\t\n\t        if (removePointer) {\n\t            // remove from the store\n\t            store.splice(storeIndex, 1);\n\t        }\n\t    }\n\t});\n\t\n\tvar SINGLE_TOUCH_INPUT_MAP = {\n\t    touchstart: INPUT_START,\n\t    touchmove: INPUT_MOVE,\n\t    touchend: INPUT_END,\n\t    touchcancel: INPUT_CANCEL\n\t};\n\t\n\tvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\n\tvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\t\n\t/**\n\t * Touch events input\n\t * @constructor\n\t * @extends Input\n\t */\n\tfunction SingleTouchInput() {\n\t    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n\t    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n\t    this.started = false;\n\t\n\t    Input.apply(this, arguments);\n\t}\n\t\n\tinherit(SingleTouchInput, Input, {\n\t    handler: function TEhandler(ev) {\n\t        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\t\n\t        // should we handle the touch events?\n\t        if (type === INPUT_START) {\n\t            this.started = true;\n\t        }\n\t\n\t        if (!this.started) {\n\t            return;\n\t        }\n\t\n\t        var touches = normalizeSingleTouches.call(this, ev, type);\n\t\n\t        // when done, reset the started state\n\t        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n\t            this.started = false;\n\t        }\n\t\n\t        this.callback(this.manager, type, {\n\t            pointers: touches[0],\n\t            changedPointers: touches[1],\n\t            pointerType: INPUT_TYPE_TOUCH,\n\t            srcEvent: ev\n\t        });\n\t    }\n\t});\n\t\n\t/**\n\t * @this {TouchInput}\n\t * @param {Object} ev\n\t * @param {Number} type flag\n\t * @returns {undefined|Array} [all, changed]\n\t */\n\tfunction normalizeSingleTouches(ev, type) {\n\t    var all = toArray(ev.touches);\n\t    var changed = toArray(ev.changedTouches);\n\t\n\t    if (type & (INPUT_END | INPUT_CANCEL)) {\n\t        all = uniqueArray(all.concat(changed), 'identifier', true);\n\t    }\n\t\n\t    return [all, changed];\n\t}\n\t\n\tvar TOUCH_INPUT_MAP = {\n\t    touchstart: INPUT_START,\n\t    touchmove: INPUT_MOVE,\n\t    touchend: INPUT_END,\n\t    touchcancel: INPUT_CANCEL\n\t};\n\t\n\tvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\t\n\t/**\n\t * Multi-user touch events input\n\t * @constructor\n\t * @extends Input\n\t */\n\tfunction TouchInput() {\n\t    this.evTarget = TOUCH_TARGET_EVENTS;\n\t    this.targetIds = {};\n\t\n\t    Input.apply(this, arguments);\n\t}\n\t\n\tinherit(TouchInput, Input, {\n\t    handler: function MTEhandler(ev) {\n\t        var type = TOUCH_INPUT_MAP[ev.type];\n\t        var touches = getTouches.call(this, ev, type);\n\t        if (!touches) {\n\t            return;\n\t        }\n\t\n\t        this.callback(this.manager, type, {\n\t            pointers: touches[0],\n\t            changedPointers: touches[1],\n\t            pointerType: INPUT_TYPE_TOUCH,\n\t            srcEvent: ev\n\t        });\n\t    }\n\t});\n\t\n\t/**\n\t * @this {TouchInput}\n\t * @param {Object} ev\n\t * @param {Number} type flag\n\t * @returns {undefined|Array} [all, changed]\n\t */\n\tfunction getTouches(ev, type) {\n\t    var allTouches = toArray(ev.touches);\n\t    var targetIds = this.targetIds;\n\t\n\t    // when there is only one touch, the process can be simplified\n\t    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n\t        targetIds[allTouches[0].identifier] = true;\n\t        return [allTouches, allTouches];\n\t    }\n\t\n\t    var i,\n\t        targetTouches,\n\t        changedTouches = toArray(ev.changedTouches),\n\t        changedTargetTouches = [],\n\t        target = this.target;\n\t\n\t    // get target touches from touches\n\t    targetTouches = allTouches.filter(function(touch) {\n\t        return hasParent(touch.target, target);\n\t    });\n\t\n\t    // collect touches\n\t    if (type === INPUT_START) {\n\t        i = 0;\n\t        while (i < targetTouches.length) {\n\t            targetIds[targetTouches[i].identifier] = true;\n\t            i++;\n\t        }\n\t    }\n\t\n\t    // filter changed touches to only contain touches that exist in the collected target ids\n\t    i = 0;\n\t    while (i < changedTouches.length) {\n\t        if (targetIds[changedTouches[i].identifier]) {\n\t            changedTargetTouches.push(changedTouches[i]);\n\t        }\n\t\n\t        // cleanup removed touches\n\t        if (type & (INPUT_END | INPUT_CANCEL)) {\n\t            delete targetIds[changedTouches[i].identifier];\n\t        }\n\t        i++;\n\t    }\n\t\n\t    if (!changedTargetTouches.length) {\n\t        return;\n\t    }\n\t\n\t    return [\n\t        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n\t        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n\t        changedTargetTouches\n\t    ];\n\t}\n\t\n\t/**\n\t * Combined touch and mouse input\n\t *\n\t * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n\t * This because touch devices also emit mouse events while doing a touch.\n\t *\n\t * @constructor\n\t * @extends Input\n\t */\n\t\n\tvar DEDUP_TIMEOUT = 2500;\n\tvar DEDUP_DISTANCE = 25;\n\t\n\tfunction TouchMouseInput() {\n\t    Input.apply(this, arguments);\n\t\n\t    var handler = bindFn(this.handler, this);\n\t    this.touch = new TouchInput(this.manager, handler);\n\t    this.mouse = new MouseInput(this.manager, handler);\n\t\n\t    this.primaryTouch = null;\n\t    this.lastTouches = [];\n\t}\n\t\n\tinherit(TouchMouseInput, Input, {\n\t    /**\n\t     * handle mouse and touch events\n\t     * @param {Hammer} manager\n\t     * @param {String} inputEvent\n\t     * @param {Object} inputData\n\t     */\n\t    handler: function TMEhandler(manager, inputEvent, inputData) {\n\t        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n\t            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\t\n\t        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n\t            return;\n\t        }\n\t\n\t        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n\t        if (isTouch) {\n\t            recordTouches.call(this, inputEvent, inputData);\n\t        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n\t            return;\n\t        }\n\t\n\t        this.callback(manager, inputEvent, inputData);\n\t    },\n\t\n\t    /**\n\t     * remove the event listeners\n\t     */\n\t    destroy: function destroy() {\n\t        this.touch.destroy();\n\t        this.mouse.destroy();\n\t    }\n\t});\n\t\n\tfunction recordTouches(eventType, eventData) {\n\t    if (eventType & INPUT_START) {\n\t        this.primaryTouch = eventData.changedPointers[0].identifier;\n\t        setLastTouch.call(this, eventData);\n\t    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n\t        setLastTouch.call(this, eventData);\n\t    }\n\t}\n\t\n\tfunction setLastTouch(eventData) {\n\t    var touch = eventData.changedPointers[0];\n\t\n\t    if (touch.identifier === this.primaryTouch) {\n\t        var lastTouch = {x: touch.clientX, y: touch.clientY};\n\t        this.lastTouches.push(lastTouch);\n\t        var lts = this.lastTouches;\n\t        var removeLastTouch = function() {\n\t            var i = lts.indexOf(lastTouch);\n\t            if (i > -1) {\n\t                lts.splice(i, 1);\n\t            }\n\t        };\n\t        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n\t    }\n\t}\n\t\n\tfunction isSyntheticEvent(eventData) {\n\t    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n\t    for (var i = 0; i < this.lastTouches.length; i++) {\n\t        var t = this.lastTouches[i];\n\t        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n\t        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n\t            return true;\n\t        }\n\t    }\n\t    return false;\n\t}\n\t\n\tvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\n\tvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\t\n\t// magical touchAction value\n\tvar TOUCH_ACTION_COMPUTE = 'compute';\n\tvar TOUCH_ACTION_AUTO = 'auto';\n\tvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\n\tvar TOUCH_ACTION_NONE = 'none';\n\tvar TOUCH_ACTION_PAN_X = 'pan-x';\n\tvar TOUCH_ACTION_PAN_Y = 'pan-y';\n\tvar TOUCH_ACTION_MAP = getTouchActionProps();\n\t\n\t/**\n\t * Touch Action\n\t * sets the touchAction property or uses the js alternative\n\t * @param {Manager} manager\n\t * @param {String} value\n\t * @constructor\n\t */\n\tfunction TouchAction(manager, value) {\n\t    this.manager = manager;\n\t    this.set(value);\n\t}\n\t\n\tTouchAction.prototype = {\n\t    /**\n\t     * set the touchAction value on the element or enable the polyfill\n\t     * @param {String} value\n\t     */\n\t    set: function(value) {\n\t        // find out the touch-action by the event handlers\n\t        if (value == TOUCH_ACTION_COMPUTE) {\n\t            value = this.compute();\n\t        }\n\t\n\t        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n\t            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n\t        }\n\t        this.actions = value.toLowerCase().trim();\n\t    },\n\t\n\t    /**\n\t     * just re-set the touchAction value\n\t     */\n\t    update: function() {\n\t        this.set(this.manager.options.touchAction);\n\t    },\n\t\n\t    /**\n\t     * compute the value for the touchAction property based on the recognizer's settings\n\t     * @returns {String} value\n\t     */\n\t    compute: function() {\n\t        var actions = [];\n\t        each(this.manager.recognizers, function(recognizer) {\n\t            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n\t                actions = actions.concat(recognizer.getTouchAction());\n\t            }\n\t        });\n\t        return cleanTouchActions(actions.join(' '));\n\t    },\n\t\n\t    /**\n\t     * this method is called on each input cycle and provides the preventing of the browser behavior\n\t     * @param {Object} input\n\t     */\n\t    preventDefaults: function(input) {\n\t        var srcEvent = input.srcEvent;\n\t        var direction = input.offsetDirection;\n\t\n\t        // if the touch action did prevented once this session\n\t        if (this.manager.session.prevented) {\n\t            srcEvent.preventDefault();\n\t            return;\n\t        }\n\t\n\t        var actions = this.actions;\n\t        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n\t        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n\t        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\t\n\t        if (hasNone) {\n\t            //do not prevent defaults if this is a tap gesture\n\t\n\t            var isTapPointer = input.pointers.length === 1;\n\t            var isTapMovement = input.distance < 2;\n\t            var isTapTouchTime = input.deltaTime < 250;\n\t\n\t            if (isTapPointer && isTapMovement && isTapTouchTime) {\n\t                return;\n\t            }\n\t        }\n\t\n\t        if (hasPanX && hasPanY) {\n\t            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n\t            return;\n\t        }\n\t\n\t        if (hasNone ||\n\t            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n\t            (hasPanX && direction & DIRECTION_VERTICAL)) {\n\t            return this.preventSrc(srcEvent);\n\t        }\n\t    },\n\t\n\t    /**\n\t     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n\t     * @param {Object} srcEvent\n\t     */\n\t    preventSrc: function(srcEvent) {\n\t        this.manager.session.prevented = true;\n\t        srcEvent.preventDefault();\n\t    }\n\t};\n\t\n\t/**\n\t * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n\t * @param {String} actions\n\t * @returns {*}\n\t */\n\tfunction cleanTouchActions(actions) {\n\t    // none\n\t    if (inStr(actions, TOUCH_ACTION_NONE)) {\n\t        return TOUCH_ACTION_NONE;\n\t    }\n\t\n\t    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n\t    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\t\n\t    // if both pan-x and pan-y are set (different recognizers\n\t    // for different directions, e.g. horizontal pan but vertical swipe?)\n\t    // we need none (as otherwise with pan-x pan-y combined none of these\n\t    // recognizers will work, since the browser would handle all panning\n\t    if (hasPanX && hasPanY) {\n\t        return TOUCH_ACTION_NONE;\n\t    }\n\t\n\t    // pan-x OR pan-y\n\t    if (hasPanX || hasPanY) {\n\t        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n\t    }\n\t\n\t    // manipulation\n\t    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n\t        return TOUCH_ACTION_MANIPULATION;\n\t    }\n\t\n\t    return TOUCH_ACTION_AUTO;\n\t}\n\t\n\tfunction getTouchActionProps() {\n\t    if (!NATIVE_TOUCH_ACTION) {\n\t        return false;\n\t    }\n\t    var touchMap = {};\n\t    var cssSupports = window.CSS && window.CSS.supports;\n\t    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\t\n\t        // If css.supports is not supported but there is native touch-action assume it supports\n\t        // all values. This is the case for IE 10 and 11.\n\t        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n\t    });\n\t    return touchMap;\n\t}\n\t\n\t/**\n\t * Recognizer flow explained; *\n\t * All recognizers have the initial state of POSSIBLE when a input session starts.\n\t * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n\t * Example session for mouse-input: mousedown -> mousemove -> mouseup\n\t *\n\t * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n\t * which determines with state it should be.\n\t *\n\t * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n\t * POSSIBLE to give it another change on the next cycle.\n\t *\n\t *               Possible\n\t *                  |\n\t *            +-----+---------------+\n\t *            |                     |\n\t *      +-----+-----+               |\n\t *      |           |               |\n\t *   Failed      Cancelled          |\n\t *                          +-------+------+\n\t *                          |              |\n\t *                      Recognized       Began\n\t *                                         |\n\t *                                      Changed\n\t *                                         |\n\t *                                  Ended/Recognized\n\t */\n\tvar STATE_POSSIBLE = 1;\n\tvar STATE_BEGAN = 2;\n\tvar STATE_CHANGED = 4;\n\tvar STATE_ENDED = 8;\n\tvar STATE_RECOGNIZED = STATE_ENDED;\n\tvar STATE_CANCELLED = 16;\n\tvar STATE_FAILED = 32;\n\t\n\t/**\n\t * Recognizer\n\t * Every recognizer needs to extend from this class.\n\t * @constructor\n\t * @param {Object} options\n\t */\n\tfunction Recognizer(options) {\n\t    this.options = assign({}, this.defaults, options || {});\n\t\n\t    this.id = uniqueId();\n\t\n\t    this.manager = null;\n\t\n\t    // default is enable true\n\t    this.options.enable = ifUndefined(this.options.enable, true);\n\t\n\t    this.state = STATE_POSSIBLE;\n\t\n\t    this.simultaneous = {};\n\t    this.requireFail = [];\n\t}\n\t\n\tRecognizer.prototype = {\n\t    /**\n\t     * @virtual\n\t     * @type {Object}\n\t     */\n\t    defaults: {},\n\t\n\t    /**\n\t     * set options\n\t     * @param {Object} options\n\t     * @return {Recognizer}\n\t     */\n\t    set: function(options) {\n\t        assign(this.options, options);\n\t\n\t        // also update the touchAction, in case something changed about the directions/enabled state\n\t        this.manager && this.manager.touchAction.update();\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * recognize simultaneous with an other recognizer.\n\t     * @param {Recognizer} otherRecognizer\n\t     * @returns {Recognizer} this\n\t     */\n\t    recognizeWith: function(otherRecognizer) {\n\t        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n\t            return this;\n\t        }\n\t\n\t        var simultaneous = this.simultaneous;\n\t        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\t        if (!simultaneous[otherRecognizer.id]) {\n\t            simultaneous[otherRecognizer.id] = otherRecognizer;\n\t            otherRecognizer.recognizeWith(this);\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n\t     * @param {Recognizer} otherRecognizer\n\t     * @returns {Recognizer} this\n\t     */\n\t    dropRecognizeWith: function(otherRecognizer) {\n\t        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n\t            return this;\n\t        }\n\t\n\t        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\t        delete this.simultaneous[otherRecognizer.id];\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * recognizer can only run when an other is failing\n\t     * @param {Recognizer} otherRecognizer\n\t     * @returns {Recognizer} this\n\t     */\n\t    requireFailure: function(otherRecognizer) {\n\t        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n\t            return this;\n\t        }\n\t\n\t        var requireFail = this.requireFail;\n\t        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\t        if (inArray(requireFail, otherRecognizer) === -1) {\n\t            requireFail.push(otherRecognizer);\n\t            otherRecognizer.requireFailure(this);\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * drop the requireFailure link. it does not remove the link on the other recognizer.\n\t     * @param {Recognizer} otherRecognizer\n\t     * @returns {Recognizer} this\n\t     */\n\t    dropRequireFailure: function(otherRecognizer) {\n\t        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n\t            return this;\n\t        }\n\t\n\t        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\t        var index = inArray(this.requireFail, otherRecognizer);\n\t        if (index > -1) {\n\t            this.requireFail.splice(index, 1);\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * has require failures boolean\n\t     * @returns {boolean}\n\t     */\n\t    hasRequireFailures: function() {\n\t        return this.requireFail.length > 0;\n\t    },\n\t\n\t    /**\n\t     * if the recognizer can recognize simultaneous with an other recognizer\n\t     * @param {Recognizer} otherRecognizer\n\t     * @returns {Boolean}\n\t     */\n\t    canRecognizeWith: function(otherRecognizer) {\n\t        return !!this.simultaneous[otherRecognizer.id];\n\t    },\n\t\n\t    /**\n\t     * You should use `tryEmit` instead of `emit` directly to check\n\t     * that all the needed recognizers has failed before emitting.\n\t     * @param {Object} input\n\t     */\n\t    emit: function(input) {\n\t        var self = this;\n\t        var state = this.state;\n\t\n\t        function emit(event) {\n\t            self.manager.emit(event, input);\n\t        }\n\t\n\t        // 'panstart' and 'panmove'\n\t        if (state < STATE_ENDED) {\n\t            emit(self.options.event + stateStr(state));\n\t        }\n\t\n\t        emit(self.options.event); // simple 'eventName' events\n\t\n\t        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n\t            emit(input.additionalEvent);\n\t        }\n\t\n\t        // panend and pancancel\n\t        if (state >= STATE_ENDED) {\n\t            emit(self.options.event + stateStr(state));\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Check that all the require failure recognizers has failed,\n\t     * if true, it emits a gesture event,\n\t     * otherwise, setup the state to FAILED.\n\t     * @param {Object} input\n\t     */\n\t    tryEmit: function(input) {\n\t        if (this.canEmit()) {\n\t            return this.emit(input);\n\t        }\n\t        // it's failing anyway\n\t        this.state = STATE_FAILED;\n\t    },\n\t\n\t    /**\n\t     * can we emit?\n\t     * @returns {boolean}\n\t     */\n\t    canEmit: function() {\n\t        var i = 0;\n\t        while (i < this.requireFail.length) {\n\t            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n\t                return false;\n\t            }\n\t            i++;\n\t        }\n\t        return true;\n\t    },\n\t\n\t    /**\n\t     * update the recognizer\n\t     * @param {Object} inputData\n\t     */\n\t    recognize: function(inputData) {\n\t        // make a new copy of the inputData\n\t        // so we can change the inputData without messing up the other recognizers\n\t        var inputDataClone = assign({}, inputData);\n\t\n\t        // is is enabled and allow recognizing?\n\t        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n\t            this.reset();\n\t            this.state = STATE_FAILED;\n\t            return;\n\t        }\n\t\n\t        // reset when we've reached the end\n\t        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n\t            this.state = STATE_POSSIBLE;\n\t        }\n\t\n\t        this.state = this.process(inputDataClone);\n\t\n\t        // the recognizer has recognized a gesture\n\t        // so trigger an event\n\t        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n\t            this.tryEmit(inputDataClone);\n\t        }\n\t    },\n\t\n\t    /**\n\t     * return the state of the recognizer\n\t     * the actual recognizing happens in this method\n\t     * @virtual\n\t     * @param {Object} inputData\n\t     * @returns {Const} STATE\n\t     */\n\t    process: function(inputData) { }, // jshint ignore:line\n\t\n\t    /**\n\t     * return the preferred touch-action\n\t     * @virtual\n\t     * @returns {Array}\n\t     */\n\t    getTouchAction: function() { },\n\t\n\t    /**\n\t     * called when the gesture isn't allowed to recognize\n\t     * like when another is being recognized or it is disabled\n\t     * @virtual\n\t     */\n\t    reset: function() { }\n\t};\n\t\n\t/**\n\t * get a usable string, used as event postfix\n\t * @param {Const} state\n\t * @returns {String} state\n\t */\n\tfunction stateStr(state) {\n\t    if (state & STATE_CANCELLED) {\n\t        return 'cancel';\n\t    } else if (state & STATE_ENDED) {\n\t        return 'end';\n\t    } else if (state & STATE_CHANGED) {\n\t        return 'move';\n\t    } else if (state & STATE_BEGAN) {\n\t        return 'start';\n\t    }\n\t    return '';\n\t}\n\t\n\t/**\n\t * direction cons to string\n\t * @param {Const} direction\n\t * @returns {String}\n\t */\n\tfunction directionStr(direction) {\n\t    if (direction == DIRECTION_DOWN) {\n\t        return 'down';\n\t    } else if (direction == DIRECTION_UP) {\n\t        return 'up';\n\t    } else if (direction == DIRECTION_LEFT) {\n\t        return 'left';\n\t    } else if (direction == DIRECTION_RIGHT) {\n\t        return 'right';\n\t    }\n\t    return '';\n\t}\n\t\n\t/**\n\t * get a recognizer by name if it is bound to a manager\n\t * @param {Recognizer|String} otherRecognizer\n\t * @param {Recognizer} recognizer\n\t * @returns {Recognizer}\n\t */\n\tfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n\t    var manager = recognizer.manager;\n\t    if (manager) {\n\t        return manager.get(otherRecognizer);\n\t    }\n\t    return otherRecognizer;\n\t}\n\t\n\t/**\n\t * This recognizer is just used as a base for the simple attribute recognizers.\n\t * @constructor\n\t * @extends Recognizer\n\t */\n\tfunction AttrRecognizer() {\n\t    Recognizer.apply(this, arguments);\n\t}\n\t\n\tinherit(AttrRecognizer, Recognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof AttrRecognizer\n\t     */\n\t    defaults: {\n\t        /**\n\t         * @type {Number}\n\t         * @default 1\n\t         */\n\t        pointers: 1\n\t    },\n\t\n\t    /**\n\t     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n\t     * @memberof AttrRecognizer\n\t     * @param {Object} input\n\t     * @returns {Boolean} recognized\n\t     */\n\t    attrTest: function(input) {\n\t        var optionPointers = this.options.pointers;\n\t        return optionPointers === 0 || input.pointers.length === optionPointers;\n\t    },\n\t\n\t    /**\n\t     * Process the input and return the state for the recognizer\n\t     * @memberof AttrRecognizer\n\t     * @param {Object} input\n\t     * @returns {*} State\n\t     */\n\t    process: function(input) {\n\t        var state = this.state;\n\t        var eventType = input.eventType;\n\t\n\t        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n\t        var isValid = this.attrTest(input);\n\t\n\t        // on cancel input and we've recognized before, return STATE_CANCELLED\n\t        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n\t            return state | STATE_CANCELLED;\n\t        } else if (isRecognized || isValid) {\n\t            if (eventType & INPUT_END) {\n\t                return state | STATE_ENDED;\n\t            } else if (!(state & STATE_BEGAN)) {\n\t                return STATE_BEGAN;\n\t            }\n\t            return state | STATE_CHANGED;\n\t        }\n\t        return STATE_FAILED;\n\t    }\n\t});\n\t\n\t/**\n\t * Pan\n\t * Recognized when the pointer is down and moved in the allowed direction.\n\t * @constructor\n\t * @extends AttrRecognizer\n\t */\n\tfunction PanRecognizer() {\n\t    AttrRecognizer.apply(this, arguments);\n\t\n\t    this.pX = null;\n\t    this.pY = null;\n\t}\n\t\n\tinherit(PanRecognizer, AttrRecognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof PanRecognizer\n\t     */\n\t    defaults: {\n\t        event: 'pan',\n\t        threshold: 10,\n\t        pointers: 1,\n\t        direction: DIRECTION_ALL\n\t    },\n\t\n\t    getTouchAction: function() {\n\t        var direction = this.options.direction;\n\t        var actions = [];\n\t        if (direction & DIRECTION_HORIZONTAL) {\n\t            actions.push(TOUCH_ACTION_PAN_Y);\n\t        }\n\t        if (direction & DIRECTION_VERTICAL) {\n\t            actions.push(TOUCH_ACTION_PAN_X);\n\t        }\n\t        return actions;\n\t    },\n\t\n\t    directionTest: function(input) {\n\t        var options = this.options;\n\t        var hasMoved = true;\n\t        var distance = input.distance;\n\t        var direction = input.direction;\n\t        var x = input.deltaX;\n\t        var y = input.deltaY;\n\t\n\t        // lock to axis?\n\t        if (!(direction & options.direction)) {\n\t            if (options.direction & DIRECTION_HORIZONTAL) {\n\t                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n\t                hasMoved = x != this.pX;\n\t                distance = Math.abs(input.deltaX);\n\t            } else {\n\t                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n\t                hasMoved = y != this.pY;\n\t                distance = Math.abs(input.deltaY);\n\t            }\n\t        }\n\t        input.direction = direction;\n\t        return hasMoved && distance > options.threshold && direction & options.direction;\n\t    },\n\t\n\t    attrTest: function(input) {\n\t        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n\t            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n\t    },\n\t\n\t    emit: function(input) {\n\t\n\t        this.pX = input.deltaX;\n\t        this.pY = input.deltaY;\n\t\n\t        var direction = directionStr(input.direction);\n\t\n\t        if (direction) {\n\t            input.additionalEvent = this.options.event + direction;\n\t        }\n\t        this._super.emit.call(this, input);\n\t    }\n\t});\n\t\n\t/**\n\t * Pinch\n\t * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n\t * @constructor\n\t * @extends AttrRecognizer\n\t */\n\tfunction PinchRecognizer() {\n\t    AttrRecognizer.apply(this, arguments);\n\t}\n\t\n\tinherit(PinchRecognizer, AttrRecognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof PinchRecognizer\n\t     */\n\t    defaults: {\n\t        event: 'pinch',\n\t        threshold: 0,\n\t        pointers: 2\n\t    },\n\t\n\t    getTouchAction: function() {\n\t        return [TOUCH_ACTION_NONE];\n\t    },\n\t\n\t    attrTest: function(input) {\n\t        return this._super.attrTest.call(this, input) &&\n\t            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n\t    },\n\t\n\t    emit: function(input) {\n\t        if (input.scale !== 1) {\n\t            var inOut = input.scale < 1 ? 'in' : 'out';\n\t            input.additionalEvent = this.options.event + inOut;\n\t        }\n\t        this._super.emit.call(this, input);\n\t    }\n\t});\n\t\n\t/**\n\t * Press\n\t * Recognized when the pointer is down for x ms without any movement.\n\t * @constructor\n\t * @extends Recognizer\n\t */\n\tfunction PressRecognizer() {\n\t    Recognizer.apply(this, arguments);\n\t\n\t    this._timer = null;\n\t    this._input = null;\n\t}\n\t\n\tinherit(PressRecognizer, Recognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof PressRecognizer\n\t     */\n\t    defaults: {\n\t        event: 'press',\n\t        pointers: 1,\n\t        time: 251, // minimal time of the pointer to be pressed\n\t        threshold: 9 // a minimal movement is ok, but keep it low\n\t    },\n\t\n\t    getTouchAction: function() {\n\t        return [TOUCH_ACTION_AUTO];\n\t    },\n\t\n\t    process: function(input) {\n\t        var options = this.options;\n\t        var validPointers = input.pointers.length === options.pointers;\n\t        var validMovement = input.distance < options.threshold;\n\t        var validTime = input.deltaTime > options.time;\n\t\n\t        this._input = input;\n\t\n\t        // we only allow little movement\n\t        // and we've reached an end event, so a tap is possible\n\t        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n\t            this.reset();\n\t        } else if (input.eventType & INPUT_START) {\n\t            this.reset();\n\t            this._timer = setTimeoutContext(function() {\n\t                this.state = STATE_RECOGNIZED;\n\t                this.tryEmit();\n\t            }, options.time, this);\n\t        } else if (input.eventType & INPUT_END) {\n\t            return STATE_RECOGNIZED;\n\t        }\n\t        return STATE_FAILED;\n\t    },\n\t\n\t    reset: function() {\n\t        clearTimeout(this._timer);\n\t    },\n\t\n\t    emit: function(input) {\n\t        if (this.state !== STATE_RECOGNIZED) {\n\t            return;\n\t        }\n\t\n\t        if (input && (input.eventType & INPUT_END)) {\n\t            this.manager.emit(this.options.event + 'up', input);\n\t        } else {\n\t            this._input.timeStamp = now();\n\t            this.manager.emit(this.options.event, this._input);\n\t        }\n\t    }\n\t});\n\t\n\t/**\n\t * Rotate\n\t * Recognized when two or more pointer are moving in a circular motion.\n\t * @constructor\n\t * @extends AttrRecognizer\n\t */\n\tfunction RotateRecognizer() {\n\t    AttrRecognizer.apply(this, arguments);\n\t}\n\t\n\tinherit(RotateRecognizer, AttrRecognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof RotateRecognizer\n\t     */\n\t    defaults: {\n\t        event: 'rotate',\n\t        threshold: 0,\n\t        pointers: 2\n\t    },\n\t\n\t    getTouchAction: function() {\n\t        return [TOUCH_ACTION_NONE];\n\t    },\n\t\n\t    attrTest: function(input) {\n\t        return this._super.attrTest.call(this, input) &&\n\t            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n\t    }\n\t});\n\t\n\t/**\n\t * Swipe\n\t * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n\t * @constructor\n\t * @extends AttrRecognizer\n\t */\n\tfunction SwipeRecognizer() {\n\t    AttrRecognizer.apply(this, arguments);\n\t}\n\t\n\tinherit(SwipeRecognizer, AttrRecognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof SwipeRecognizer\n\t     */\n\t    defaults: {\n\t        event: 'swipe',\n\t        threshold: 10,\n\t        velocity: 0.3,\n\t        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n\t        pointers: 1\n\t    },\n\t\n\t    getTouchAction: function() {\n\t        return PanRecognizer.prototype.getTouchAction.call(this);\n\t    },\n\t\n\t    attrTest: function(input) {\n\t        var direction = this.options.direction;\n\t        var velocity;\n\t\n\t        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n\t            velocity = input.overallVelocity;\n\t        } else if (direction & DIRECTION_HORIZONTAL) {\n\t            velocity = input.overallVelocityX;\n\t        } else if (direction & DIRECTION_VERTICAL) {\n\t            velocity = input.overallVelocityY;\n\t        }\n\t\n\t        return this._super.attrTest.call(this, input) &&\n\t            direction & input.offsetDirection &&\n\t            input.distance > this.options.threshold &&\n\t            input.maxPointers == this.options.pointers &&\n\t            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n\t    },\n\t\n\t    emit: function(input) {\n\t        var direction = directionStr(input.offsetDirection);\n\t        if (direction) {\n\t            this.manager.emit(this.options.event + direction, input);\n\t        }\n\t\n\t        this.manager.emit(this.options.event, input);\n\t    }\n\t});\n\t\n\t/**\n\t * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n\t * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n\t * a single tap.\n\t *\n\t * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n\t * multi-taps being recognized.\n\t * @constructor\n\t * @extends Recognizer\n\t */\n\tfunction TapRecognizer() {\n\t    Recognizer.apply(this, arguments);\n\t\n\t    // previous time and center,\n\t    // used for tap counting\n\t    this.pTime = false;\n\t    this.pCenter = false;\n\t\n\t    this._timer = null;\n\t    this._input = null;\n\t    this.count = 0;\n\t}\n\t\n\tinherit(TapRecognizer, Recognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof PinchRecognizer\n\t     */\n\t    defaults: {\n\t        event: 'tap',\n\t        pointers: 1,\n\t        taps: 1,\n\t        interval: 300, // max time between the multi-tap taps\n\t        time: 250, // max time of the pointer to be down (like finger on the screen)\n\t        threshold: 9, // a minimal movement is ok, but keep it low\n\t        posThreshold: 10 // a multi-tap can be a bit off the initial position\n\t    },\n\t\n\t    getTouchAction: function() {\n\t        return [TOUCH_ACTION_MANIPULATION];\n\t    },\n\t\n\t    process: function(input) {\n\t        var options = this.options;\n\t\n\t        var validPointers = input.pointers.length === options.pointers;\n\t        var validMovement = input.distance < options.threshold;\n\t        var validTouchTime = input.deltaTime < options.time;\n\t\n\t        this.reset();\n\t\n\t        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n\t            return this.failTimeout();\n\t        }\n\t\n\t        // we only allow little movement\n\t        // and we've reached an end event, so a tap is possible\n\t        if (validMovement && validTouchTime && validPointers) {\n\t            if (input.eventType != INPUT_END) {\n\t                return this.failTimeout();\n\t            }\n\t\n\t            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n\t            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\t\n\t            this.pTime = input.timeStamp;\n\t            this.pCenter = input.center;\n\t\n\t            if (!validMultiTap || !validInterval) {\n\t                this.count = 1;\n\t            } else {\n\t                this.count += 1;\n\t            }\n\t\n\t            this._input = input;\n\t\n\t            // if tap count matches we have recognized it,\n\t            // else it has began recognizing...\n\t            var tapCount = this.count % options.taps;\n\t            if (tapCount === 0) {\n\t                // no failing requirements, immediately trigger the tap event\n\t                // or wait as long as the multitap interval to trigger\n\t                if (!this.hasRequireFailures()) {\n\t                    return STATE_RECOGNIZED;\n\t                } else {\n\t                    this._timer = setTimeoutContext(function() {\n\t                        this.state = STATE_RECOGNIZED;\n\t                        this.tryEmit();\n\t                    }, options.interval, this);\n\t                    return STATE_BEGAN;\n\t                }\n\t            }\n\t        }\n\t        return STATE_FAILED;\n\t    },\n\t\n\t    failTimeout: function() {\n\t        this._timer = setTimeoutContext(function() {\n\t            this.state = STATE_FAILED;\n\t        }, this.options.interval, this);\n\t        return STATE_FAILED;\n\t    },\n\t\n\t    reset: function() {\n\t        clearTimeout(this._timer);\n\t    },\n\t\n\t    emit: function() {\n\t        if (this.state == STATE_RECOGNIZED) {\n\t            this._input.tapCount = this.count;\n\t            this.manager.emit(this.options.event, this._input);\n\t        }\n\t    }\n\t});\n\t\n\t/**\n\t * Simple way to create a manager with a default set of recognizers.\n\t * @param {HTMLElement} element\n\t * @param {Object} [options]\n\t * @constructor\n\t */\n\tfunction Hammer(element, options) {\n\t    options = options || {};\n\t    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n\t    return new Manager(element, options);\n\t}\n\t\n\t/**\n\t * @const {string}\n\t */\n\tHammer.VERSION = '2.0.7';\n\t\n\t/**\n\t * default settings\n\t * @namespace\n\t */\n\tHammer.defaults = {\n\t    /**\n\t     * set if DOM events are being triggered.\n\t     * But this is slower and unused by simple implementations, so disabled by default.\n\t     * @type {Boolean}\n\t     * @default false\n\t     */\n\t    domEvents: false,\n\t\n\t    /**\n\t     * The value for the touchAction property/fallback.\n\t     * When set to `compute` it will magically set the correct value based on the added recognizers.\n\t     * @type {String}\n\t     * @default compute\n\t     */\n\t    touchAction: TOUCH_ACTION_COMPUTE,\n\t\n\t    /**\n\t     * @type {Boolean}\n\t     * @default true\n\t     */\n\t    enable: true,\n\t\n\t    /**\n\t     * EXPERIMENTAL FEATURE -- can be removed/changed\n\t     * Change the parent input target element.\n\t     * If Null, then it is being set the to main element.\n\t     * @type {Null|EventTarget}\n\t     * @default null\n\t     */\n\t    inputTarget: null,\n\t\n\t    /**\n\t     * force an input class\n\t     * @type {Null|Function}\n\t     * @default null\n\t     */\n\t    inputClass: null,\n\t\n\t    /**\n\t     * Default recognizer setup when calling `Hammer()`\n\t     * When creating a new Manager these will be skipped.\n\t     * @type {Array}\n\t     */\n\t    preset: [\n\t        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n\t        [RotateRecognizer, {enable: false}],\n\t        [PinchRecognizer, {enable: false}, ['rotate']],\n\t        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n\t        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n\t        [TapRecognizer],\n\t        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n\t        [PressRecognizer]\n\t    ],\n\t\n\t    /**\n\t     * Some CSS properties can be used to improve the working of Hammer.\n\t     * Add them to this method and they will be set when creating a new Manager.\n\t     * @namespace\n\t     */\n\t    cssProps: {\n\t        /**\n\t         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n\t         * @type {String}\n\t         * @default 'none'\n\t         */\n\t        userSelect: 'none',\n\t\n\t        /**\n\t         * Disable the Windows Phone grippers when pressing an element.\n\t         * @type {String}\n\t         * @default 'none'\n\t         */\n\t        touchSelect: 'none',\n\t\n\t        /**\n\t         * Disables the default callout shown when you touch and hold a touch target.\n\t         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n\t         * a callout containing information about the link. This property allows you to disable that callout.\n\t         * @type {String}\n\t         * @default 'none'\n\t         */\n\t        touchCallout: 'none',\n\t\n\t        /**\n\t         * Specifies whether zooming is enabled. Used by IE10>\n\t         * @type {String}\n\t         * @default 'none'\n\t         */\n\t        contentZooming: 'none',\n\t\n\t        /**\n\t         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n\t         * @type {String}\n\t         * @default 'none'\n\t         */\n\t        userDrag: 'none',\n\t\n\t        /**\n\t         * Overrides the highlight color shown when the user taps a link or a JavaScript\n\t         * clickable element in iOS. This property obeys the alpha value, if specified.\n\t         * @type {String}\n\t         * @default 'rgba(0,0,0,0)'\n\t         */\n\t        tapHighlightColor: 'rgba(0,0,0,0)'\n\t    }\n\t};\n\t\n\tvar STOP = 1;\n\tvar FORCED_STOP = 2;\n\t\n\t/**\n\t * Manager\n\t * @param {HTMLElement} element\n\t * @param {Object} [options]\n\t * @constructor\n\t */\n\tfunction Manager(element, options) {\n\t    this.options = assign({}, Hammer.defaults, options || {});\n\t\n\t    this.options.inputTarget = this.options.inputTarget || element;\n\t\n\t    this.handlers = {};\n\t    this.session = {};\n\t    this.recognizers = [];\n\t    this.oldCssProps = {};\n\t\n\t    this.element = element;\n\t    this.input = createInputInstance(this);\n\t    this.touchAction = new TouchAction(this, this.options.touchAction);\n\t\n\t    toggleCssProps(this, true);\n\t\n\t    each(this.options.recognizers, function(item) {\n\t        var recognizer = this.add(new (item[0])(item[1]));\n\t        item[2] && recognizer.recognizeWith(item[2]);\n\t        item[3] && recognizer.requireFailure(item[3]);\n\t    }, this);\n\t}\n\t\n\tManager.prototype = {\n\t    /**\n\t     * set options\n\t     * @param {Object} options\n\t     * @returns {Manager}\n\t     */\n\t    set: function(options) {\n\t        assign(this.options, options);\n\t\n\t        // Options that need a little more setup\n\t        if (options.touchAction) {\n\t            this.touchAction.update();\n\t        }\n\t        if (options.inputTarget) {\n\t            // Clean up existing event listeners and reinitialize\n\t            this.input.destroy();\n\t            this.input.target = options.inputTarget;\n\t            this.input.init();\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * stop recognizing for this session.\n\t     * This session will be discarded, when a new [input]start event is fired.\n\t     * When forced, the recognizer cycle is stopped immediately.\n\t     * @param {Boolean} [force]\n\t     */\n\t    stop: function(force) {\n\t        this.session.stopped = force ? FORCED_STOP : STOP;\n\t    },\n\t\n\t    /**\n\t     * run the recognizers!\n\t     * called by the inputHandler function on every movement of the pointers (touches)\n\t     * it walks through all the recognizers and tries to detect the gesture that is being made\n\t     * @param {Object} inputData\n\t     */\n\t    recognize: function(inputData) {\n\t        var session = this.session;\n\t        if (session.stopped) {\n\t            return;\n\t        }\n\t\n\t        // run the touch-action polyfill\n\t        this.touchAction.preventDefaults(inputData);\n\t\n\t        var recognizer;\n\t        var recognizers = this.recognizers;\n\t\n\t        // this holds the recognizer that is being recognized.\n\t        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n\t        // if no recognizer is detecting a thing, it is set to `null`\n\t        var curRecognizer = session.curRecognizer;\n\t\n\t        // reset when the last recognizer is recognized\n\t        // or when we're in a new session\n\t        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n\t            curRecognizer = session.curRecognizer = null;\n\t        }\n\t\n\t        var i = 0;\n\t        while (i < recognizers.length) {\n\t            recognizer = recognizers[i];\n\t\n\t            // find out if we are allowed try to recognize the input for this one.\n\t            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n\t            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n\t            //      that is being recognized.\n\t            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n\t            //      this can be setup with the `recognizeWith()` method on the recognizer.\n\t            if (session.stopped !== FORCED_STOP && ( // 1\n\t                    !curRecognizer || recognizer == curRecognizer || // 2\n\t                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n\t                recognizer.recognize(inputData);\n\t            } else {\n\t                recognizer.reset();\n\t            }\n\t\n\t            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n\t            // current active recognizer. but only if we don't already have an active recognizer\n\t            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n\t                curRecognizer = session.curRecognizer = recognizer;\n\t            }\n\t            i++;\n\t        }\n\t    },\n\t\n\t    /**\n\t     * get a recognizer by its event name.\n\t     * @param {Recognizer|String} recognizer\n\t     * @returns {Recognizer|Null}\n\t     */\n\t    get: function(recognizer) {\n\t        if (recognizer instanceof Recognizer) {\n\t            return recognizer;\n\t        }\n\t\n\t        var recognizers = this.recognizers;\n\t        for (var i = 0; i < recognizers.length; i++) {\n\t            if (recognizers[i].options.event == recognizer) {\n\t                return recognizers[i];\n\t            }\n\t        }\n\t        return null;\n\t    },\n\t\n\t    /**\n\t     * add a recognizer to the manager\n\t     * existing recognizers with the same event name will be removed\n\t     * @param {Recognizer} recognizer\n\t     * @returns {Recognizer|Manager}\n\t     */\n\t    add: function(recognizer) {\n\t        if (invokeArrayArg(recognizer, 'add', this)) {\n\t            return this;\n\t        }\n\t\n\t        // remove existing\n\t        var existing = this.get(recognizer.options.event);\n\t        if (existing) {\n\t            this.remove(existing);\n\t        }\n\t\n\t        this.recognizers.push(recognizer);\n\t        recognizer.manager = this;\n\t\n\t        this.touchAction.update();\n\t        return recognizer;\n\t    },\n\t\n\t    /**\n\t     * remove a recognizer by name or instance\n\t     * @param {Recognizer|String} recognizer\n\t     * @returns {Manager}\n\t     */\n\t    remove: function(recognizer) {\n\t        if (invokeArrayArg(recognizer, 'remove', this)) {\n\t            return this;\n\t        }\n\t\n\t        recognizer = this.get(recognizer);\n\t\n\t        // let's make sure this recognizer exists\n\t        if (recognizer) {\n\t            var recognizers = this.recognizers;\n\t            var index = inArray(recognizers, recognizer);\n\t\n\t            if (index !== -1) {\n\t                recognizers.splice(index, 1);\n\t                this.touchAction.update();\n\t            }\n\t        }\n\t\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * bind event\n\t     * @param {String} events\n\t     * @param {Function} handler\n\t     * @returns {EventEmitter} this\n\t     */\n\t    on: function(events, handler) {\n\t        if (events === undefined) {\n\t            return;\n\t        }\n\t        if (handler === undefined) {\n\t            return;\n\t        }\n\t\n\t        var handlers = this.handlers;\n\t        each(splitStr(events), function(event) {\n\t            handlers[event] = handlers[event] || [];\n\t            handlers[event].push(handler);\n\t        });\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * unbind event, leave emit blank to remove all handlers\n\t     * @param {String} events\n\t     * @param {Function} [handler]\n\t     * @returns {EventEmitter} this\n\t     */\n\t    off: function(events, handler) {\n\t        if (events === undefined) {\n\t            return;\n\t        }\n\t\n\t        var handlers = this.handlers;\n\t        each(splitStr(events), function(event) {\n\t            if (!handler) {\n\t                delete handlers[event];\n\t            } else {\n\t                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n\t            }\n\t        });\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * emit event to the listeners\n\t     * @param {String} event\n\t     * @param {Object} data\n\t     */\n\t    emit: function(event, data) {\n\t        // we also want to trigger dom events\n\t        if (this.options.domEvents) {\n\t            triggerDomEvent(event, data);\n\t        }\n\t\n\t        // no handlers, so skip it all\n\t        var handlers = this.handlers[event] && this.handlers[event].slice();\n\t        if (!handlers || !handlers.length) {\n\t            return;\n\t        }\n\t\n\t        data.type = event;\n\t        data.preventDefault = function() {\n\t            data.srcEvent.preventDefault();\n\t        };\n\t\n\t        var i = 0;\n\t        while (i < handlers.length) {\n\t            handlers[i](data);\n\t            i++;\n\t        }\n\t    },\n\t\n\t    /**\n\t     * destroy the manager and unbinds all events\n\t     * it doesn't unbind dom events, that is the user own responsibility\n\t     */\n\t    destroy: function() {\n\t        this.element && toggleCssProps(this, false);\n\t\n\t        this.handlers = {};\n\t        this.session = {};\n\t        this.input.destroy();\n\t        this.element = null;\n\t    }\n\t};\n\t\n\t/**\n\t * add/remove the css properties as defined in manager.options.cssProps\n\t * @param {Manager} manager\n\t * @param {Boolean} add\n\t */\n\tfunction toggleCssProps(manager, add) {\n\t    var element = manager.element;\n\t    if (!element.style) {\n\t        return;\n\t    }\n\t    var prop;\n\t    each(manager.options.cssProps, function(value, name) {\n\t        prop = prefixed(element.style, name);\n\t        if (add) {\n\t            manager.oldCssProps[prop] = element.style[prop];\n\t            element.style[prop] = value;\n\t        } else {\n\t            element.style[prop] = manager.oldCssProps[prop] || '';\n\t        }\n\t    });\n\t    if (!add) {\n\t        manager.oldCssProps = {};\n\t    }\n\t}\n\t\n\t/**\n\t * trigger dom event\n\t * @param {String} event\n\t * @param {Object} data\n\t */\n\tfunction triggerDomEvent(event, data) {\n\t    var gestureEvent = document.createEvent('Event');\n\t    gestureEvent.initEvent(event, true, true);\n\t    gestureEvent.gesture = data;\n\t    data.target.dispatchEvent(gestureEvent);\n\t}\n\t\n\tassign(Hammer, {\n\t    INPUT_START: INPUT_START,\n\t    INPUT_MOVE: INPUT_MOVE,\n\t    INPUT_END: INPUT_END,\n\t    INPUT_CANCEL: INPUT_CANCEL,\n\t\n\t    STATE_POSSIBLE: STATE_POSSIBLE,\n\t    STATE_BEGAN: STATE_BEGAN,\n\t    STATE_CHANGED: STATE_CHANGED,\n\t    STATE_ENDED: STATE_ENDED,\n\t    STATE_RECOGNIZED: STATE_RECOGNIZED,\n\t    STATE_CANCELLED: STATE_CANCELLED,\n\t    STATE_FAILED: STATE_FAILED,\n\t\n\t    DIRECTION_NONE: DIRECTION_NONE,\n\t    DIRECTION_LEFT: DIRECTION_LEFT,\n\t    DIRECTION_RIGHT: DIRECTION_RIGHT,\n\t    DIRECTION_UP: DIRECTION_UP,\n\t    DIRECTION_DOWN: DIRECTION_DOWN,\n\t    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n\t    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n\t    DIRECTION_ALL: DIRECTION_ALL,\n\t\n\t    Manager: Manager,\n\t    Input: Input,\n\t    TouchAction: TouchAction,\n\t\n\t    TouchInput: TouchInput,\n\t    MouseInput: MouseInput,\n\t    PointerEventInput: PointerEventInput,\n\t    TouchMouseInput: TouchMouseInput,\n\t    SingleTouchInput: SingleTouchInput,\n\t\n\t    Recognizer: Recognizer,\n\t    AttrRecognizer: AttrRecognizer,\n\t    Tap: TapRecognizer,\n\t    Pan: PanRecognizer,\n\t    Swipe: SwipeRecognizer,\n\t    Pinch: PinchRecognizer,\n\t    Rotate: RotateRecognizer,\n\t    Press: PressRecognizer,\n\t\n\t    on: addEventListeners,\n\t    off: removeEventListeners,\n\t    each: each,\n\t    merge: merge,\n\t    extend: extend,\n\t    assign: assign,\n\t    inherit: inherit,\n\t    bindFn: bindFn,\n\t    prefixed: prefixed\n\t});\n\t\n\t// this prevents errors when Hammer is loaded in the presence of an AMD\n\t//  style loader but by script tag, not by the loader.\n\tvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\n\tfreeGlobal.Hammer = Hammer;\n\t\n\tif (true) {\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t        return Hammer;\n\t    }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else if (typeof module != 'undefined' && module.exports) {\n\t    module.exports = Hammer;\n\t} else {\n\t    window[exportName] = Hammer;\n\t}\n\t\n\t})(window, document, 'Hammer');\n\t\n\t\n\t/***/ }),\n\t/* 48 */\n\t/***/ (function(module, exports) {\n\t\n\tmodule.exports = \"\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='28' viewBox='0 0 302.62219 263.65625'%3E%3Cg transform='translate(-163.588 -156.305)' stroke='%23000' fill='none'%3E%3Ccircle cx='271.429' cy='263.791' r='95.714' stroke-width='20'/%3E%3Cpath d='M345.714 329.505l107.143 77.143' stroke-width='25' stroke-linecap='round'/%3E%3Cpath d='M271.143 197.79v134.286M338.857 265.79H204.571' stroke-width='15' stroke-linecap='round'/%3E%3C/g%3E%3C/svg%3E\\\"\"\n\t\n\t/***/ }),\n\t/* 49 */\n\t/***/ (function(module, exports) {\n\t\n\tmodule.exports = \"\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='44.8' height='39.2' viewBox='0 0 302.62219 263.65625'%3E%3Cg transform='translate(-163.588 -156.305)' stroke='%23000' fill='none'%3E%3Ccircle cx='271.429' cy='263.791' r='95.714' stroke-width='20'/%3E%3Cpath d='M345.714 329.505l107.143 77.143' stroke-width='25' stroke-linecap='round'/%3E%3Cpath d='M338.857 265.79H204.571' stroke-width='15' stroke-linecap='round'/%3E%3C/g%3E%3C/svg%3E\\\"\"\n\t\n\t/***/ })\n\t/******/ ]);\n\n/***/ }),\n\n/***/ 480:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar ZoomableImage = function ZoomableImage() {\n\t  return _react2.default.createElement('div', null);\n\t};\n\tif (typeof window !== 'undefined') {\n\t  ZoomableImage = __webpack_require__(796).default;\n\t}\n\tvar MAP = function MAP() {\n\t  return _react2.default.createElement(\n\t    'div',\n\t    { style: { display: 'flex', justifyContent: 'center' } },\n\t    '>',\n\t    _react2.default.createElement(ZoomableImage, {\n\t      baseImage: {\n\t        alt: 'An image',\n\t        src: 'http://getschedulehelper.com/hackdavis/mapzoom.jpg',\n\t        width: 1150,\n\t        height: 900\n\t      },\n\t      largeImage: {\n\t        alt: 'A large image',\n\t        src: 'http://getschedulehelper.com/hackdavis/mapzoom.jpg',\n\t        width: 1150,\n\t        height: 900\n\t      },\n\t      thumbnailImage: {\n\t        alt: 'A small image',\n\t        src: 'http://getschedulehelper.com/hackdavis/mapzoom.jpg'\n\t      }\n\t    })\n\t  );\n\t};\n\t\n\texports.default = MAP;\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-map-js-d2a0db37fe01e694adfc.js","module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 12);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\nvar emptyFunction = __webpack_require__(1);\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  var printWarning = function printWarning(format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  warning = function warning(condition, format) {\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n\n    if (format.indexOf('Failed Composite propType: ') === 0) {\n      return; // Ignore CompositeComponent proptype check.\n    }\n\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseGetTag = __webpack_require__(28),\n    isObject = __webpack_require__(10);\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar root = __webpack_require__(9);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar freeGlobal = __webpack_require__(29);\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _propTypes = __webpack_require__(13);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = __webpack_require__(18);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _zipWith = __webpack_require__(19);\n\nvar _zipWith2 = _interopRequireDefault(_zipWith);\n\nvar _hammerjs = __webpack_require__(47);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global document, window */\n\n\nvar magPlus = __webpack_require__(48);\nvar magMinus = __webpack_require__(49);\n\nvar isEqual = function isEqual(arr1, arr2) {\n  for (var i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n\nvar styles = {\n  wrapper: {\n    position: 'relative',\n    zIndex: 1\n  },\n\n  image: {\n    position: 'relative',\n    transitionProperty: 'z-index',\n    width: '100%',\n    height: '100%'\n  },\n\n  zoomContainer: {\n    position: 'absolute',\n    top: 0\n  },\n\n  innerMap: {\n    position: 'absolute',\n    top: 10,\n    left: 10,\n    pointerEvents: 'none'\n  },\n\n  innerMapImage: {\n    width: '101%',\n    height: 'auto'\n  },\n\n  innerMapHighlightBox: {\n    position: 'absolute',\n    backgroundColor: 'rgba(140, 137, 131, 0.6)'\n  },\n\n  zoomedImage: {\n    position: 'absolute',\n    top: 0,\n    backgroundColor: 'transparent',\n    backgroundRepeat: 'no-repeat'\n  }\n};\n\nvar isInBounds = function isInBounds(coordinates, upperBounds) {\n  var flag = true;\n  coordinates.forEach(function (marker, i) {\n    if (marker <= 0 || marker >= upperBounds[i]) {\n      flag = false;\n    }\n  });\n  return flag;\n};\n\nvar nearestInBoundsPosition = function nearestInBoundsPosition(loc, bounds) {\n  return loc.map(function (p, i) {\n    return Math.min(p, bounds[i]);\n  });\n};\n\nvar ZoomableImage = function (_Component) {\n  _inherits(ZoomableImage, _Component);\n\n  /**\n   * Sets initial size of images, and zoom level into state\n   * @param {*} props\n   */\n  function ZoomableImage(props) {\n    _classCallCheck(this, ZoomableImage);\n\n    var _this = _possibleConstructorReturn(this, (ZoomableImage.__proto__ || Object.getPrototypeOf(ZoomableImage)).call(this, props));\n\n    _this.startZoom = function (initialFocalPoint, isTouchDevice) {\n      if (isTouchDevice) _this.setState({ calcMovementFromDrag: true });\n      if (!isEqual(_this.state.viewWindowPosition, initialFocalPoint)) {\n        var _this$props = _this.props,\n            width = _this$props.baseImage.width,\n            largeImage = _this$props.largeImage;\n\n        var largeWidth = largeImage.width;\n        var largeHeight = largeImage.height;\n        var largeImageSize = [largeWidth, largeHeight];\n\n        var startingFocus = isTouchDevice ? initialFocalPoint.map(function (p) {\n          return p * (largeWidth / width);\n        }) : initialFocalPoint;\n\n        if (isTouchDevice && !isInBounds(startingFocus, largeImageSize)) {\n          startingFocus = nearestInBoundsPosition(startingFocus, largeImageSize);\n        }\n        _this.setState({\n          viewWindowPosition: startingFocus,\n          lastClickToZoomPosition: initialFocalPoint,\n          calcMovementFromDrag: isTouchDevice\n        });\n      }\n      _this.setState({\n        zoomed: 1,\n        zoomLevel: _this.state.defaultZoomLevel,\n        pageClickHandlersAreAdded: true,\n        isStartingZoom: true\n      });\n\n      // Turning off transitions so there is no delay between mousemove and the background\n      // image repositioning\n      setTimeout(function () {\n        _this.addBodyClickHandlers();\n        _this.setState({\n          transitionZoomBackground: false,\n          isStartingZoom: false\n        });\n      }, _this.props.zoomTransitionTime);\n    };\n\n    _this.endZoom = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      var zoomLevel = _this.props.baseImage.width / _this.props.largeImage.width;\n      // Transitioning out of zoom view\n      _this.removeBodyClickHandlers();\n      _this.setState({\n        zoomed: 0,\n        zoomLevel: zoomLevel,\n        pageClickHandlersAreAdded: false,\n        transitionZoomBackground: true,\n        isEndingZoom: true\n      });\n      setTimeout(function () {\n        _this.setState({ isEndingZoom: false });\n      }, _this.props.zoomTransitionTime);\n    };\n\n    _this.onZoomWindowTouchStart = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      if (e.targetTouches) {\n        _this.setState({\n          isDragging: true,\n          previousDragPosition: [e.targetTouches[0].clientX, e.targetTouches[0].clientY]\n        });\n      }\n      _this.checkForTap();\n    };\n\n    _this.onTouchEnd = function (e) {\n      // If this was a tap, not a drag, close the zoom view\n      if (_this.state.listeningForSingleClick) {\n        _this.endZoom(e);\n      } else {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n      _this.setState({ isDragging: false });\n    };\n\n    _this.addBodyClickHandlers = function () {\n      if (document && document.querySelector) {\n        if (!_this.bodyElement) _this.bodyElement = document.querySelector('body');\n        _this.bodyClickHandlers.forEach(function (handler) {\n          var _this$bodyElement;\n\n          (_this$bodyElement = _this.bodyElement).addEventListener.apply(_this$bodyElement, _toConsumableArray(handler));\n        });\n      }\n    };\n\n    _this.removeBodyClickHandlers = function () {\n      if (document && document.querySelector) {\n        _this.bodyClickHandlers.forEach(function (handler) {\n          var _this$bodyElement2;\n\n          (_this$bodyElement2 = _this.bodyElement).removeEventListener.apply(_this$bodyElement2, _toConsumableArray(handler));\n        });\n      }\n    };\n\n    _this.calcBackgroundOffsetFromMouse = function (e) {\n      if (!_this.state.isDragging && e.nativeEvent) {\n        if (_this.state.calcMovementFromDrag) _this.setState({ calcMovementFromDrag: false });\n        var _e$nativeEvent = e.nativeEvent,\n            offsetX = _e$nativeEvent.offsetX,\n            offsetY = _e$nativeEvent.offsetY;\n\n        var viewWindowPosition = [offsetX, offsetY];\n        window.requestAnimationFrame(function () {\n          _this.setState({ viewWindowPosition: viewWindowPosition });\n        });\n      }\n    };\n\n    _this.calcBackgroundOffsetFromDrag = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      if (!_this.state.calcMovementFromDrag) _this.setState({ calcMovementFromDrag: true });\n\n      var _this$state = _this.state,\n          zoomLevel = _this$state.zoomLevel,\n          previousDragPosition = _this$state.previousDragPosition,\n          viewWindowPosition = _this$state.viewWindowPosition;\n      var largeImage = _this.props.largeImage;\n\n      var largeImageSize = [largeImage.width, largeImage.height];\n\n      if (e.targetTouches) {\n        var currentDragPosition = [e.targetTouches[0].clientX, e.targetTouches[0].clientY];\n\n        // Translate the view window focal point by the drag distance\n        var dragScale = 3 / (zoomLevel * zoomLevel);\n        var newFocus = (0, _zipWith2.default)(viewWindowPosition, currentDragPosition, previousDragPosition, function (f, c, p) {\n          return f + (p - c) * dragScale;\n        });\n\n        if (isInBounds(newFocus, largeImageSize)) {\n          window.requestAnimationFrame(function () {\n            _this.setState({\n              viewWindowPosition: newFocus,\n              previousDragPosition: currentDragPosition\n            });\n          });\n        }\n      }\n    };\n\n    _this.checkForTap = function () {\n      _this.setState({ listeningForSingleClick: true });\n      setTimeout(function () {\n        return _this.setState({ listeningForSingleClick: false });\n      }, 200);\n    };\n\n    _this.pauseZoom = function () {\n      return _this.setState({ isCalculatingZoom: true });\n    };\n\n    _this.resumeZoom = function () {\n      return _this.setState({ isCalculatingZoom: false });\n    };\n\n    _this.handleZoom = function (e) {\n      e.preventDefault();\n      var zoomLevel = _this.state.zoomLevel;\n\n      if (!_this.state.isCalculatingZoom && zoomLevel <= 2 && zoomLevel >= 0) {\n        if ((e.type === 'pinchout' || e.deltaY < 0) && zoomLevel < 2) {\n          _this.zoom(0.05);\n        } else if ((e.type === 'pinchin' || e.deltaY > 0) && zoomLevel > 1) {\n          _this.zoom(-0.05);\n        }\n      }\n    };\n\n    _this.zoom = function (delta) {\n      _this.pauseZoom();\n      var zoomLevel = Math.round((_this.state.zoomLevel + delta) * 100) / 100;\n      _this.setState({ zoomLevel: zoomLevel }, _this.resumeZoom);\n    };\n\n    _this.state = {\n      zoomed: 0,\n      zoomLevel: props.baseImage.width / props.largeImage.width,\n      defaultZoomLevel: 1.2,\n      viewWindowPosition: [0, 0],\n      dragFocalPoint: [0, 0],\n      lastClickToZoomPosition: [-1, -1],\n      isCalculatingZoom: false,\n      isDragging: false,\n      calcMovementFromDrag: false,\n      pageClickHandlersAreAdded: false,\n      transitionZoomBackground: true,\n      isStartingZoom: false,\n      isEndingZoom: false\n    };\n    return _this;\n  }\n\n  /**\n   * This is all a workaround to handle chrome disabling e.preventDefault()\n   * unless you specify to enable it. Unfortunately this cannot be done through\n   * React synthetic events\n   */\n\n\n  _createClass(ZoomableImage, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.bodyClickHandlers = [['click', this.endZoom], ['touchstart', this.checkForTap], ['touchend', this.onTouchEnd]];\n      var passiveSupported = false;\n      try {\n        var options = Object.defineProperty({}, 'passive', {\n          get: function get() {\n            passiveSupported = true;\n          }\n        });\n        document.querySelector('body').addEventListener('test', null, options);\n      } catch (err) {\n        passiveSupported = false;\n      }\n      var passive = passiveSupported ? { passive: false } : false;\n      if (this.zoomContainer) {\n        this.zoomContainer.addEventListener('touchmove', this.calcBackgroundOffsetFromDrag, passive);\n        this.zoomContainer.addEventListener('touchstart', this.onZoomWindowTouchStart, passive);\n        this.zoomContainer.addEventListener('touchend', this.onTouchEnd, passive);\n        // Initialize Hammer\n        this.mc = new _hammerjs.Manager(this.zoomContainer);\n        this.mc.add(new _hammerjs.Pinch());\n        this.mc.on('pinchin', this.handleZoom);\n        this.mc.on('pinchout', this.handleZoom);\n      }\n    }\n\n    /**\n     * Make sure we don't leave any garbage behind\n     */\n\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.removeBodyClickHandlers();\n    }\n\n    /**\n     * Close zoom view following a click or tap anywhere on the page\n     */\n\n  }, {\n    key: 'render',\n\n\n    /**\n     * Renders.\n     * @returns {*}\n     */\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          baseImage = _props.baseImage,\n          largeImage = _props.largeImage,\n          thumbnailImage = _props.thumbnailImage,\n          displayMap = _props.displayMap,\n          zoomTransitionTime = _props.zoomTransitionTime,\n          mapBorderColor = _props.mapBorderColor,\n          mapScaleFactor = _props.mapScaleFactor;\n      var _state = this.state,\n          zoomed = _state.zoomed,\n          viewWindowPosition = _state.viewWindowPosition,\n          zoomLevel = _state.zoomLevel,\n          calcMovementFromDrag = _state.calcMovementFromDrag,\n          transitionZoomBackground = _state.transitionZoomBackground,\n          isStartingZoom = _state.isStartingZoom,\n          listeningForSingleClick = _state.listeningForSingleClick,\n          isEndingZoom = _state.isEndingZoom,\n          isTouch = _state.isTouch;\n      var width = baseImage.width,\n          height = baseImage.height;\n\n      var largeWidth = largeImage.width;\n      var largeHeight = largeImage.height;\n      var baseToZoomRatio = width / (largeWidth * zoomLevel);\n      var referencePosition = calcMovementFromDrag ? [largeWidth, largeHeight] : [width, height];\n      var viewWindowPercent = viewWindowPosition.map(function (offset, i) {\n        return Math.round(offset / referencePosition[i] * 1000) / 10;\n      });\n\n      return _react2.default.createElement(\n        'div',\n        {\n          'data-name': 'wrapper',\n          style: _extends({}, styles.wrapper, { width: width, height: height, cursor: 'url(' + (zoomed ? magMinus : magPlus) + '), pointer' }),\n          onMouseDown: function onMouseDown(e) {\n            if (!zoomed && !isTouch) {\n              _this2.startZoom([e.nativeEvent.offsetX, e.nativeEvent.offsetY], false);\n            }\n          },\n          onTouchStart: function onTouchStart(e) {\n            if (!zoomed) {\n              e.preventDefault();\n              e.stopPropagation();\n              _this2.setState({ listeningForSingleClick: true, isTouch: true });\n              setTimeout(function () {\n                _this2.setState({ listeningForSingleClick: false });\n              }, 200);\n              setTimeout(function () {\n                _this2.setState({ isTouch: false });\n              }, 2000);\n            }\n          },\n          onTouchEnd: function onTouchEnd(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            if (!zoomed && listeningForSingleClick && !isEndingZoom) {\n              var _e$target$getBounding = e.target.getBoundingClientRect(),\n                  x = _e$target$getBounding.x,\n                  y = _e$target$getBounding.y;\n\n              _this2.startZoom([e.changedTouches[0].clientX - (x || 0), e.changedTouches[0].clientY - (y || 0)], true);\n            }\n          }\n        },\n        _react2.default.createElement('img', {\n          src: baseImage.src,\n          alt: baseImage.alt,\n          style: _extends({}, styles.image, {\n            zIndex: zoomed ? -1 : 1,\n            transitionDelay: zoomTransitionTime + 'ms'\n          })\n        }),\n        _react2.default.createElement(\n          'div',\n          {\n            'data-name': 'zoom-wrapper',\n            ref: function ref(domNode) {\n              _this2.zoomContainer = domNode;\n            },\n            onMouseMove: this.calcBackgroundOffsetFromMouse,\n            onWheel: this.handleZoom,\n            style: _extends({}, styles.zoomContainer, { width: width, height: height, zIndex: zoomed * 100 })\n          },\n          displayMap && _react2.default.createElement(\n            'div',\n            {\n              style: _extends({}, styles.innerMap, {\n                width: width * mapScaleFactor,\n                height: height * mapScaleFactor,\n                zIndex: zoomed * 200,\n                border: '2px solid ' + mapBorderColor\n\n              })\n            },\n            _react2.default.createElement('img', { style: styles.innerMapImage, src: thumbnailImage.src, alt: thumbnailImage.alt || 'thumbnail' }),\n            _react2.default.createElement('div', {\n              'data-name': 'map-highlight',\n              style: _extends({}, styles.innerMapHighlightBox, {\n                width: baseToZoomRatio * 100 + '%',\n                height: baseToZoomRatio * 100 + '%',\n                left: viewWindowPercent[0] * (1 - baseToZoomRatio) + '%',\n                top: viewWindowPercent[1] * (1 - baseToZoomRatio) + '%'\n              })\n            })\n          ),\n          _react2.default.createElement('div', {\n            'data-name': 'zoom-image',\n            onClick: function onClick(e) {\n              if (zoomed && !isStartingZoom) _this2.endZoom(e);\n            },\n            style: _extends({}, styles.zoomedImage, {\n              width: width,\n              height: height,\n              zIndex: zoomed * 110,\n              backgroundPosition: viewWindowPercent.map(function (p) {\n                return p + '%';\n              }).join(' '),\n              backgroundSize: Math.round(largeWidth * zoomLevel) + 'px ' + Math.round(largeHeight * zoomLevel) + 'px',\n              backgroundImage: 'url(' + largeImage.src + ')',\n              transition: transitionZoomBackground ? 'background-size ' + zoomTransitionTime + 'ms ease-in-out' : 'none'\n            })\n          })\n        )\n      );\n    }\n  }]);\n\n  return ZoomableImage;\n}(_react.Component);\n\nvar imageShape = {\n  alt: _propTypes2.default.string.isRequired,\n  src: _propTypes2.default.string.isRequired\n};\nvar sizedImageShape = _extends({}, imageShape, {\n  width: _propTypes2.default.number.isRequired,\n  height: _propTypes2.default.number.isRequired\n});\n\nZoomableImage.propTypes = {\n  baseImage: _propTypes2.default.shape(sizedImageShape).isRequired,\n  displayMap: _propTypes2.default.bool,\n  largeImage: _propTypes2.default.shape(sizedImageShape).isRequired,\n  mapBorderColor: _propTypes2.default.string,\n  mapScaleFactor: _propTypes2.default.number,\n  thumbnailImage: _propTypes2.default.shape(imageShape),\n  zoomTransitionTime: _propTypes2.default.number\n};\n\nZoomableImage.defaultProps = {\n  zoomTransitionTime: 300,\n  displayMap: true,\n  mapBorderColor: 'grey',\n  mapScaleFactor: 0.2,\n  thumbnailImage: { alt: '', src: '' }\n};\n\nexports.default = ZoomableImage;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = __webpack_require__(14)(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = __webpack_require__(17)();\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar emptyFunction = __webpack_require__(1);\nvar invariant = __webpack_require__(2);\nvar warning = __webpack_require__(4);\nvar assign = __webpack_require__(15);\n\nvar ReactPropTypesSecret = __webpack_require__(3);\nvar checkPropTypes = __webpack_require__(16);\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          invariant(\n            false,\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            warning(\n              false,\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `%s` prop on `%s`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',\n              propFullName,\n              componentName\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunction.thatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;\n      return emptyFunction.thatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues);\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (propValue.hasOwnProperty(key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunction.thatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        warning(\n          false,\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received %s at index %s.',\n          getPostfixForTypeWarning(checker),\n          i\n        );\n        return emptyFunction.thatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from\n      // props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (process.env.NODE_ENV !== 'production') {\n  var invariant = __webpack_require__(2);\n  var warning = __webpack_require__(4);\n  var ReactPropTypesSecret = __webpack_require__(3);\n  var loggedTypeFailures = {};\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = checkPropTypes;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar emptyFunction = __webpack_require__(1);\nvar invariant = __webpack_require__(2);\nvar ReactPropTypesSecret = __webpack_require__(3);\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"react\");\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseRest = __webpack_require__(20),\n    unzipWith = __webpack_require__(38);\n\n/**\n * This method is like `_.zip` except that it accepts `iteratee` to specify\n * how grouped values should be combined. The iteratee is invoked with the\n * elements of each group: (...group).\n *\n * @static\n * @memberOf _\n * @since 3.8.0\n * @category Array\n * @param {...Array} [arrays] The arrays to process.\n * @param {Function} [iteratee=_.identity] The function to combine\n *  grouped values.\n * @returns {Array} Returns the new array of grouped elements.\n * @example\n *\n * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n *   return a + b + c;\n * });\n * // => [111, 222]\n */\nvar zipWith = baseRest(function(arrays) {\n  var length = arrays.length,\n      iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n  iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n  return unzipWith(arrays, iteratee);\n});\n\nmodule.exports = zipWith;\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar identity = __webpack_require__(5),\n    overRest = __webpack_require__(21),\n    setToString = __webpack_require__(22);\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar apply = __webpack_require__(6);\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseSetToString = __webpack_require__(23),\n    shortOut = __webpack_require__(37);\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar constant = __webpack_require__(24),\n    defineProperty = __webpack_require__(25),\n    identity = __webpack_require__(5);\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getNative = __webpack_require__(26);\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseIsNative = __webpack_require__(27),\n    getValue = __webpack_require__(36);\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isFunction = __webpack_require__(7),\n    isMasked = __webpack_require__(33),\n    isObject = __webpack_require__(10),\n    toSource = __webpack_require__(35);\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Symbol = __webpack_require__(8),\n    getRawTag = __webpack_require__(31),\n    objectToString = __webpack_require__(32);\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(30)))\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Symbol = __webpack_require__(8);\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar coreJsData = __webpack_require__(34);\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar root = __webpack_require__(9);\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\n/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar apply = __webpack_require__(6),\n    arrayMap = __webpack_require__(11),\n    unzip = __webpack_require__(39);\n\n/**\n * This method is like `_.unzip` except that it accepts `iteratee` to specify\n * how regrouped values should be combined. The iteratee is invoked with the\n * elements of each group: (...group).\n *\n * @static\n * @memberOf _\n * @since 3.8.0\n * @category Array\n * @param {Array} array The array of grouped elements to process.\n * @param {Function} [iteratee=_.identity] The function to combine\n *  regrouped values.\n * @returns {Array} Returns the new array of regrouped elements.\n * @example\n *\n * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n * // => [[1, 10, 100], [2, 20, 200]]\n *\n * _.unzipWith(zipped, _.add);\n * // => [3, 30, 300]\n */\nfunction unzipWith(array, iteratee) {\n  if (!(array && array.length)) {\n    return [];\n  }\n  var result = unzip(array);\n  if (iteratee == null) {\n    return result;\n  }\n  return arrayMap(result, function(group) {\n    return apply(iteratee, undefined, group);\n  });\n}\n\nmodule.exports = unzipWith;\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar arrayFilter = __webpack_require__(40),\n    arrayMap = __webpack_require__(11),\n    baseProperty = __webpack_require__(41),\n    baseTimes = __webpack_require__(42),\n    isArrayLikeObject = __webpack_require__(43);\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.zip` except that it accepts an array of grouped\n * elements and creates an array regrouping the elements to their pre-zip\n * configuration.\n *\n * @static\n * @memberOf _\n * @since 1.2.0\n * @category Array\n * @param {Array} array The array of grouped elements to process.\n * @returns {Array} Returns the new array of regrouped elements.\n * @example\n *\n * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n * // => [['a', 1, true], ['b', 2, false]]\n *\n * _.unzip(zipped);\n * // => [['a', 'b'], [1, 2], [true, false]]\n */\nfunction unzip(array) {\n  if (!(array && array.length)) {\n    return [];\n  }\n  var length = 0;\n  array = arrayFilter(array, function(group) {\n    if (isArrayLikeObject(group)) {\n      length = nativeMax(group.length, length);\n      return true;\n    }\n  });\n  return baseTimes(length, function(index) {\n    return arrayMap(array, baseProperty(index));\n  });\n}\n\nmodule.exports = unzip;\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports) {\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports) {\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports) {\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArrayLike = __webpack_require__(44),\n    isObjectLike = __webpack_require__(46);\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isFunction = __webpack_require__(7),\n    isLength = __webpack_require__(45);\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports) {\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (true) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n        return Hammer;\n    }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='28' viewBox='0 0 302.62219 263.65625'%3E%3Cg transform='translate(-163.588 -156.305)' stroke='%23000' fill='none'%3E%3Ccircle cx='271.429' cy='263.791' r='95.714' stroke-width='20'/%3E%3Cpath d='M345.714 329.505l107.143 77.143' stroke-width='25' stroke-linecap='round'/%3E%3Cpath d='M271.143 197.79v134.286M338.857 265.79H204.571' stroke-width='15' stroke-linecap='round'/%3E%3C/g%3E%3C/svg%3E\\\"\"\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='44.8' height='39.2' viewBox='0 0 302.62219 263.65625'%3E%3Cg transform='translate(-163.588 -156.305)' stroke='%23000' fill='none'%3E%3Ccircle cx='271.429' cy='263.791' r='95.714' stroke-width='20'/%3E%3Cpath d='M345.714 329.505l107.143 77.143' stroke-width='25' stroke-linecap='round'/%3E%3Cpath d='M338.857 265.79H204.571' stroke-width='15' stroke-linecap='round'/%3E%3C/g%3E%3C/svg%3E\\\"\"\n\n/***/ })\n/******/ ]);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-zoomable-image/build/index.js\n// module id = 796\n// module chunks = 251955352258861","import React from 'react'\r\nvar ZoomableImage = () => (\r\n  <div></div>\r\n)\r\nif(typeof window !== `undefined`){\r\n  ZoomableImage = require('react-zoomable-image').default;\r\n}\r\nconst MAP = () => (\r\n        <div style={{display: 'flex', justifyContent: 'center'}}>>\r\n         <ZoomableImage\r\n           baseImage={{\r\n             alt: 'An image',\r\n             src: 'http://getschedulehelper.com/hackdavis/mapzoom.jpg',\r\n             width: 1150,\r\n             height: 900\r\n           }}\r\n           largeImage={{\r\n             alt: 'A large image',\r\n             src: 'http://getschedulehelper.com/hackdavis/mapzoom.jpg',\r\n             width: 1150,\r\n             height: 900\r\n           }}\r\n           thumbnailImage={{\r\n             alt: 'A small image',\r\n             src: 'http://getschedulehelper.com/hackdavis/mapzoom.jpg'\r\n           }}\r\n         />\r\n         </div>\r\n\r\n)\r\n\r\nexport default MAP\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/map.js"],"sourceRoot":""}